// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>schemas</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace NPOI.OpenXmlFormats.Spreadsheet
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    using System.IO;
    using NPOI.OpenXmlFormats.Dml;
    using System.Xml;


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_NumFmts
    {

        private List<CT_NumFmt> numFmtField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_NumFmts()
        {
            this.numFmtField = new List<CT_NumFmt>();
        }

        public CT_NumFmt AddNewNumFmt()
        {
            CT_NumFmt newNumFmt = new CT_NumFmt();
            this.numFmtField.Add(newNumFmt);
            return newNumFmt;
        }
        [XmlElement]
        public List<CT_NumFmt> numFmt
        {
            get
            {
                return this.numFmtField;
            }
            set
            {
                this.numFmtField = value;
            }
        }
        [XmlAttribute]
        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_NumFmt
    {

        private uint numFmtIdField;

        private string formatCodeField;

        [XmlAttribute]
        public uint numFmtId
        {
            get
            {
                return this.numFmtIdField;
            }
            set
            {
                this.numFmtIdField = value;
            }
        }
        [XmlAttribute]
        public string formatCode
        {
            get
            {
                return this.formatCodeField;
            }
            set
            {
                this.formatCodeField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_RgbColor
    {

        private byte[] rgbField;

        public byte[] rgb
        {
            get
            {
                return this.rgbField;
            }
            set
            {
                this.rgbField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Colors
    {
        private List<CT_RgbColor> indexedColorsField;

        private List<CT_Color> mruColorsField;

        public CT_Colors()
        {
            this.mruColorsField = new List<CT_Color>();
            this.indexedColorsField = new List<CT_RgbColor>();
        }

        [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("rgbColor", IsNullable = false)]
        public List<CT_RgbColor> indexedColors
        {
            get
            {
                return this.indexedColorsField;
            }
            set
            {
                this.indexedColorsField = value;
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Order = 1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("color", IsNullable = false)]
        public List<CT_Color> mruColors
        {
            get
            {
                return this.mruColorsField;
            }
            set
            {
                this.mruColorsField = value;
            }
        }
    }



    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Fill
    {

        private object itemField;

        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        public CT_PatternFill GetPatternFill()
        {
            return (CT_PatternFill)this.itemField;
        }

        public CT_PatternFill AddNewPatternFill()
        {
            this.itemField = new CT_PatternFill();
            return GetPatternFill();
        }
        public bool IsSetPatternFill()
        {
            return this.itemField != null;
        }
        public CT_Fill Copy()
        {
            CT_Fill obj = new CT_Fill();
            obj.itemField = this.itemField;
            return obj;
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public enum ST_GradientType
    {

        /// <remarks/>
        linear,

        /// <remarks/>
        path,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_PatternFill
    {
        private CT_Color fgColorField = null;

        private CT_Color bgColorField = null;

        private ST_PatternType? patternTypeField = null;

         public bool IsSetPatternType()
        {
            return this.patternTypeField != null;
        }
        public CT_Color AddNewFgColor()
        {
            this.fgColorField = new CT_Color();
            return fgColorField;
        }

        public CT_Color AddNewBgColor()
        {
            this.bgColorField = new CT_Color();
            return bgColorField;
        }
        public void unsetPatternType()
        {
            this.patternTypeField = null;
        }
        public void unsetFgColor()
        {
            this.fgColorField = null;
        }
        public void unsetBgColor()
        {
            this.bgColorField = null;
        }
        [XmlElement]
        public CT_Color fgColor
        {
            get
            {
                return this.fgColorField;
            }
            set
            {
                this.fgColorField = value;
            }
        }

        public bool IsSetBgColor()
        {
            return bgColorField != null;
        }

        public bool IsSetFgColor()
        {
            return fgColorField != null;
        }

        [XmlElement]
        public CT_Color bgColor
        {
            get
            {
                return this.bgColorField;
            }
            set
            {
                this.bgColorField = value;
            }
        }

        [XmlAttribute]
        public ST_PatternType patternType
        {
            get
            {
                return null != this.patternTypeField ? (ST_PatternType)this.patternTypeField : ST_PatternType.none;
            }
            set
            {
                this.patternTypeField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternTypeSpecified
        {
            get
            {
                return null != this.patternTypeField;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public enum ST_PatternType
    {

        /// <remarks/>
        none,

        /// <remarks/>
        solid,

        /// <remarks/>
        mediumGray,

        /// <remarks/>
        darkGray,

        /// <remarks/>
        lightGray,

        /// <remarks/>
        darkHorizontal,

        /// <remarks/>
        darkVertical,

        /// <remarks/>
        darkDown,

        /// <remarks/>
        darkUp,

        /// <remarks/>
        darkGrid,

        /// <remarks/>
        darkTrellis,

        /// <remarks/>
        lightHorizontal,

        /// <remarks/>
        lightVertical,

        /// <remarks/>
        lightDown,

        /// <remarks/>
        lightUp,

        /// <remarks/>
        lightGrid,

        /// <remarks/>
        lightTrellis,

        /// <remarks/>
        gray125,

        /// <remarks/>
        gray0625,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellAlignment
    {

        private ST_HorizontalAlignment? horizontalField;

        private bool horizontalFieldSpecified;

        private ST_VerticalAlignment? verticalField;

        private bool verticalFieldSpecified;

        private long textRotationField;

        private bool textRotationFieldSpecified;

        private bool wrapTextField;

        private bool wrapTextFieldSpecified;

        private long indentField;

        private bool indentFieldSpecified;

        private int relativeIndentField;

        private bool relativeIndentFieldSpecified;

        private bool justifyLastLineField;

        private bool justifyLastLineFieldSpecified;

        private bool shrinkToFitField;

        private bool shrinkToFitFieldSpecified;

        private long readingOrderField;

        private bool readingOrderFieldSpecified;

        public bool IsSetHorizontal()
        {
            return this.horizontalField != null;
        }
        public bool IsSetVertical()
        {
            return this.verticalField != null;
        }

        public ST_HorizontalAlignment horizontal
        {
            get
            {
                return (ST_HorizontalAlignment)this.horizontalField;
            }
            set
            {
                this.horizontalField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool horizontalSpecified
        {
            get
            {
                return this.horizontalFieldSpecified;
            }
            set
            {
                this.horizontalFieldSpecified = value;
            }
        }

        public ST_VerticalAlignment vertical
        {
            get
            {
                return (ST_VerticalAlignment)this.verticalField;
            }
            set
            {
                this.verticalField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool verticalSpecified
        {
            get
            {
                return this.verticalFieldSpecified;
            }
            set
            {
                this.verticalFieldSpecified = value;
            }
        }

        public long textRotation
        {
            get
            {
                return this.textRotationField;
            }
            set
            {
                this.textRotationField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool textRotationSpecified
        {
            get
            {
                return this.textRotationFieldSpecified;
            }
            set
            {
                this.textRotationFieldSpecified = value;
            }
        }

        public bool wrapText
        {
            get
            {
                return this.wrapTextField;
            }
            set
            {
                this.wrapTextField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wrapTextSpecified
        {
            get
            {
                return this.wrapTextFieldSpecified;
            }
            set
            {
                this.wrapTextFieldSpecified = value;
            }
        }

        public long indent
        {
            get
            {
                return this.indentField;
            }
            set
            {
                this.indentField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indentSpecified
        {
            get
            {
                return this.indentFieldSpecified;
            }
            set
            {
                this.indentFieldSpecified = value;
            }
        }

        public int relativeIndent
        {
            get
            {
                return this.relativeIndentField;
            }
            set
            {
                this.relativeIndentField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool relativeIndentSpecified
        {
            get
            {
                return this.relativeIndentFieldSpecified;
            }
            set
            {
                this.relativeIndentFieldSpecified = value;
            }
        }

        public bool justifyLastLine
        {
            get
            {
                return this.justifyLastLineField;
            }
            set
            {
                this.justifyLastLineField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool justifyLastLineSpecified
        {
            get
            {
                return this.justifyLastLineFieldSpecified;
            }
            set
            {
                this.justifyLastLineFieldSpecified = value;
            }
        }

        public bool shrinkToFit
        {
            get
            {
                return this.shrinkToFitField;
            }
            set
            {
                this.shrinkToFitField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shrinkToFitSpecified
        {
            get
            {
                return this.shrinkToFitFieldSpecified;
            }
            set
            {
                this.shrinkToFitFieldSpecified = value;
            }
        }

        public long readingOrder
        {
            get
            {
                return this.readingOrderField;
            }
            set
            {
                this.readingOrderField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingOrderSpecified
        {
            get
            {
                return this.readingOrderFieldSpecified;
            }
            set
            {
                this.readingOrderFieldSpecified = value;
            }
        }
    }

    public enum ST_HorizontalAlignment
    {

        /// <remarks/>
        general,

        /// <remarks/>
        left,

        /// <remarks/>
        center,

        /// <remarks/>
        right,

        /// <remarks/>
        fill,

        /// <remarks/>
        justify,

        /// <remarks/>
        centerContinuous,

        /// <remarks/>
        distributed,
    }

    public enum ST_VerticalAlignment
    {

        /// <remarks/>
        top,

        /// <remarks/>
        center,

        /// <remarks/>
        bottom,

        /// <remarks/>
        justify,

        /// <remarks/>
        distributed,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Border
    {

        private CT_BorderPr leftField;

        private CT_BorderPr rightField;

        private CT_BorderPr topField;

        private CT_BorderPr bottomField;

        private CT_BorderPr diagonalField;

        private CT_BorderPr verticalField;

        private CT_BorderPr horizontalField;

        private bool diagonalUpField;

        private bool diagonalUpFieldSpecified;

        private bool diagonalDownField;

        private bool diagonalDownFieldSpecified;

        private bool outlineField;

        public CT_Border()
        {
            this.horizontalField = new CT_BorderPr();
            this.verticalField = new CT_BorderPr();
            //this.diagonalField = new CT_BorderPr();
            //this.bottomField = new CT_BorderPr();
            //this.topField = new CT_BorderPr();
            //this.rightField = new CT_BorderPr();
            //this.leftField = new CT_BorderPr();
            this.outlineField = true;
        }
        public CT_Border Copy()
        {
            CT_Border obj = new CT_Border();
            obj.bottomField = this.bottomField;
            obj.topField = this.topField;
            obj.rightField = this.rightField;
            obj.leftField = this.leftField;
            obj.horizontalField = this.horizontalField;
            obj.verticalField = this.verticalField;
            obj.outlineField = this.outlineField;
            return obj;
        }
        public CT_BorderPr AddNewDiagonal()
        {
            this.diagonalField = new CT_BorderPr();
            return this.diagonalField;
        }
        public bool IsSetDiagonal()
        {
            return this.diagonalField != null;
        }
        public void unsetDiagonal()
        {
            this.diagonalField = null;
        }

        public void unsetRight()
        {
            this.rightField = null;
        }
        public void unsetLeft()
        {
            this.leftField = null;
        }
        public void unsetTop()
        {
            this.topField = null;
        }
        public void unsetBottom()
        {
            this.bottomField = null;
        }
        public bool IsSetBottom()
        {
            return this.bottomField != null;
        }
        public bool IsSetLeft()
        {
            return this.leftField != null;
        }
        public bool IsSetRight()
        {
            return this.rightField != null;
        }
        public bool IsSetTop()
        {
            return this.topField != null;
        }

        public bool IsSetBorder()
        {
            return this.leftField != null || this.rightField != null
                || this.topField != null || this.bottomField != null;
        }
        public CT_BorderPr AddNewTop()
        {
            this.topField = new CT_BorderPr();
            return this.topField;
        }
        public CT_BorderPr AddNewRight()
        {
            this.rightField = new CT_BorderPr();
            return this.rightField;
        }
        public CT_BorderPr AddNewLeft()
        {
            this.leftField = new CT_BorderPr();
            return this.leftField;
        }
        public CT_BorderPr AddNewBottom()
        {
            this.bottomField = new CT_BorderPr();
            return this.bottomField;
        }

        public CT_BorderPr left
        {
            get
            {
                return this.leftField;
            }
            set
            {
                this.leftField = value;
            }
        }

        public CT_BorderPr right
        {
            get
            {
                return this.rightField;
            }
            set
            {
                this.rightField = value;
            }
        }

        public CT_BorderPr top
        {
            get
            {
                return this.topField;
            }
            set
            {
                this.topField = value;
            }
        }

        public CT_BorderPr bottom
        {
            get
            {
                return this.bottomField;
            }
            set
            {
                this.bottomField = value;
            }
        }

        public CT_BorderPr diagonal
        {
            get
            {
                return this.diagonalField;
            }
            set
            {
                this.diagonalField = value;
            }
        }

        public CT_BorderPr vertical
        {
            get
            {
                return this.verticalField;
            }
            set
            {
                this.verticalField = value;
            }
        }

        public CT_BorderPr horizontal
        {
            get
            {
                return this.horizontalField;
            }
            set
            {
                this.horizontalField = value;
            }
        }

        public bool diagonalUp
        {
            get
            {
                return this.diagonalUpField;
            }
            set
            {
                this.diagonalUpField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool diagonalUpSpecified
        {
            get
            {
                return this.diagonalUpFieldSpecified;
            }
            set
            {
                this.diagonalUpFieldSpecified = value;
            }
        }

        public bool diagonalDown
        {
            get
            {
                return this.diagonalDownField;
            }
            set
            {
                this.diagonalDownField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool diagonalDownSpecified
        {
            get
            {
                return this.diagonalDownFieldSpecified;
            }
            set
            {
                this.diagonalDownFieldSpecified = value;
            }
        }

        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool outline
        {
            get
            {
                return this.outlineField;
            }
            set
            {
                this.outlineField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_BorderPr
    {

        private CT_Color colorField;

        private ST_BorderStyle? styleField;

        public CT_BorderPr()
        {
            //this.colorField = new CT_Color();
            //this.styleField = ST_BorderStyle.none;
        }
        public void SetColor(CT_Color color)
        {
            this.colorField = color;
        }
        public bool IsSetColor()
        {
            return colorField == null;
        }
        public void UnsetColor()
        {
            colorField = null;
        }


        public CT_Color color
        {
            get
            {
                return this.colorField;
            }
            set
            {
                this.colorField = value;
            }
        }

        [System.ComponentModel.DefaultValueAttribute(ST_BorderStyle.none)]
        public ST_BorderStyle? style
        {
            get
            {
                return this.styleField;
            }
            set
            {
                this.styleField = value;
            }
        }
    }

    public enum ST_BorderStyle
    {

        /// <remarks/>
        none,

        /// <remarks/>
        thin,

        /// <remarks/>
        medium,

        /// <remarks/>
        dashed,

        /// <remarks/>
        dotted,

        /// <remarks/>
        thick,

        /// <remarks/>
        @double,

        /// <remarks/>
        hair,

        /// <remarks/>
        mediumDashed,

        /// <remarks/>
        dashDot,

        /// <remarks/>
        mediumDashDot,

        /// <remarks/>
        dashDotDot,

        /// <remarks/>
        mediumDashDotDot,

        /// <remarks/>
        slantDashDot,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellProtection
    {

        private bool? lockedField;

        private bool lockedFieldSpecified;

        private bool? hiddenField;

        private bool hiddenFieldSpecified;

        public bool IsSetHidden()
        {
            return this.hiddenField != null;
        }
        public bool IsSetLocked()
        {
            return this.lockedField != null;
        }


        public bool? locked
        {
            get
            {
                return this.lockedField;
            }
            set
            {
                this.lockedField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockedSpecified
        {
            get
            {
                return this.lockedFieldSpecified;
            }
            set
            {
                this.lockedFieldSpecified = value;
            }
        }

        public bool hidden
        {
            get
            {
                return (bool)this.hiddenField;
            }
            set
            {
                this.hiddenField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hiddenSpecified
        {
            get
            {
                return this.hiddenFieldSpecified;
            }
            set
            {
                this.hiddenFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellStyle
    {

        private CT_ExtensionList extLstField;

        private string nameField;

        private uint xfIdField;

        private uint builtinIdField;

        private bool builtinIdFieldSpecified;

        private uint iLevelField;

        private bool iLevelFieldSpecified;

        private bool hiddenField;

        private bool hiddenFieldSpecified;

        private bool customBuiltinField;

        private bool customBuiltinFieldSpecified;

        public CT_CellStyle()
        {
            this.extLstField = new CT_ExtensionList();
        }

        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        public uint xfId
        {
            get
            {
                return this.xfIdField;
            }
            set
            {
                this.xfIdField = value;
            }
        }

        public uint builtinId
        {
            get
            {
                return this.builtinIdField;
            }
            set
            {
                this.builtinIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool builtinIdSpecified
        {
            get
            {
                return this.builtinIdFieldSpecified;
            }
            set
            {
                this.builtinIdFieldSpecified = value;
            }
        }

        public uint iLevel
        {
            get
            {
                return this.iLevelField;
            }
            set
            {
                this.iLevelField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool iLevelSpecified
        {
            get
            {
                return this.iLevelFieldSpecified;
            }
            set
            {
                this.iLevelFieldSpecified = value;
            }
        }

        public bool hidden
        {
            get
            {
                return this.hiddenField;
            }
            set
            {
                this.hiddenField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hiddenSpecified
        {
            get
            {
                return this.hiddenFieldSpecified;
            }
            set
            {
                this.hiddenFieldSpecified = value;
            }
        }

        public bool customBuiltin
        {
            get
            {
                return this.customBuiltinField;
            }
            set
            {
                this.customBuiltinField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customBuiltinSpecified
        {
            get
            {
                return this.customBuiltinFieldSpecified;
            }
            set
            {
                this.customBuiltinFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellStyles
    {

        private List<CT_CellStyle> cellStyleField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_CellStyles()
        {
            this.cellStyleField = new List<CT_CellStyle>();
        }

        public List<CT_CellStyle> cellStyle
        {
            get
            {
                return this.cellStyleField;
            }
            set
            {
                this.cellStyleField = value;
            }
        }

        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellXfs
    {

        private List<CT_Xf> xfField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_CellXfs()
        {
            this.xfField = new List<CT_Xf>();
        }
        [XmlElement]
        public List<CT_Xf> xf
        {
            get
            {
                return this.xfField;
            }
            set
            {
                this.xfField = value;
            }
        }
        [XmlAttribute]
        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Xf
    {
        internal static XmlSerializer serializer = new XmlSerializer(typeof(CT_Xf));
        internal static XmlSerializerNamespaces namespaces = new XmlSerializerNamespaces(new[] {
            new XmlQualifiedName("", "http://schemas.openxmlformats.org/spreadsheetml/2006/main") });

        private CT_CellAlignment alignmentField;

        private CT_CellProtection protectionField;

        private CT_ExtensionList extLstField;

        private uint numFmtIdField;

        private bool numFmtIdFieldSpecified;

        private uint fontIdField;

        private bool fontIdFieldSpecified;

        private uint fillIdField;

        private bool fillIdFieldSpecified;

        private uint borderIdField;

        private bool borderIdFieldSpecified;

        private uint xfIdField;

        private bool xfIdFieldSpecified;

        private bool quotePrefixField;

        private bool pivotButtonField;

        private bool applyNumberFormatField;

        private bool applyNumberFormatFieldSpecified;

        private bool applyFontField;

        private bool applyFontFieldSpecified;

        private bool applyFillField;

        private bool applyFillFieldSpecified;

        private bool applyBorderField;

        private bool applyBorderFieldSpecified;

        private bool applyAlignmentField;

        private bool applyAlignmentFieldSpecified;

        private bool applyProtectionField;

        private bool applyProtectionFieldSpecified;

        public CT_Xf()
        {
            this.extLstField = new CT_ExtensionList();
            this.protectionField = new CT_CellProtection();
            this.alignmentField = new CT_CellAlignment();
            this.quotePrefixField = false;
            this.pivotButtonField = false;
        }
        public CT_Xf Copy()
        {
            CT_Xf obj = new CT_Xf();
            obj.alignmentField = this.alignmentField;
            obj.applyAlignmentField = this.applyAlignmentField;
            obj.applyAlignmentFieldSpecified = this.applyAlignmentFieldSpecified;
            obj.applyBorderField = this.applyBorderField;
            obj.applyBorderFieldSpecified = this.applyBorderFieldSpecified;
            obj.applyFillField = this.applyFillField;
            obj.applyFillFieldSpecified = this.applyFillFieldSpecified;
            obj.applyFontField = this.applyFontField;
            obj.applyFontFieldSpecified = this.applyFontFieldSpecified;
            obj.applyNumberFormatField = this.applyNumberFormatField;
            obj.applyNumberFormatFieldSpecified = this.applyNumberFormatFieldSpecified;
            obj.applyProtectionField = this.applyProtectionField;
            obj.applyProtectionFieldSpecified = this.applyProtectionFieldSpecified;
            obj.borderIdField = this.borderIdField;
            obj.borderIdFieldSpecified = this.borderIdFieldSpecified;
            obj.fillIdField = this.fillIdField;
            obj.fillIdFieldSpecified = this.fillIdFieldSpecified;
            obj.fontIdField = this.fontIdField;
            obj.fontIdFieldSpecified = this.fontIdFieldSpecified;
            obj.numFmtIdField = this.numFmtIdField;
            obj.numFmtIdFieldSpecified = this.numFmtIdFieldSpecified;
            obj.pivotButtonField = this.pivotButtonField;
            obj.protectionField = this.protectionField;
            obj.quotePrefixField = this.quotePrefixField;
            obj.xfIdField = this.xfIdField;
            obj.xfIdFieldSpecified = this.xfIdFieldSpecified;
            obj.extLstField = this.extLstField.Copy();
            return obj;
        }

        public static CT_Xf Parse(string xml)
        {
            CT_Xf result;
            using (StringReader stream = new StringReader(xml))
            {
                result = (CT_Xf)serializer.Deserialize(stream);
            }
            return result;
        }
        public static void Save(Stream stream, CT_Xf font)
        {
            serializer.Serialize(stream, font, namespaces);
        }

        public bool IsSetAlignment()
        {
            return this.alignmentField != null;
        }
        public bool IsSetFontId()
        {
            return this.fontIdField != 0;
        }
        public void UnsetAlignment()
        {
            this.alignmentField = null;
        }
        public bool IsSetExtLst()
        {
            return this.extLst == null;
        }
        public void unsetExtLst()
        {
            this.extLst = null;
        }
        public bool IsSetProtection()
        {
            return this.protectionField != null;
        }
        public bool IsSetLocked()
        {
            // first guess:
            return IsSetProtection() && protectionField.lockedSpecified && (protectionField.locked == true);
        }
        public CT_CellProtection AddNewProtection()
        {
            this.protectionField = new CT_CellProtection();
            return this.protectionField;
        }

        public CT_CellAlignment alignment
        {
            get
            {
                return this.alignmentField;
            }
            set
            {
                this.alignmentField = value;
            }
        }

        public CT_CellProtection protection
        {
            get
            {
                return this.protectionField;
            }
            set
            {
                this.protectionField = value;
            }
        }

        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
        [XmlAttribute]
        public uint numFmtId
        {
            get
            {
                return this.numFmtIdField;
            }
            set
            {
                this.numFmtIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numFmtIdSpecified
        {
            get
            {
                return this.numFmtIdFieldSpecified;
            }
            set
            {
                this.numFmtIdFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public uint fontId
        {
            get
            {
                return this.fontIdField;
            }
            set
            {
                this.fontIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fontIdSpecified
        {
            get
            {
                return this.fontIdFieldSpecified;
            }
            set
            {
                this.fontIdFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public uint fillId
        {
            get
            {
                return this.fillIdField;
            }
            set
            {
                this.fillIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fillIdSpecified
        {
            get
            {
                return this.fillIdFieldSpecified;
            }
            set
            {
                this.fillIdFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public uint borderId
        {
            get
            {
                return this.borderIdField;
            }
            set
            {
                this.borderIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool borderIdSpecified
        {
            get
            {
                return this.borderIdFieldSpecified;
            }
            set
            {
                this.borderIdFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public uint xfId
        {
            get
            {
                return this.xfIdField;
            }
            set
            {
                this.xfIdField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xfIdSpecified
        {
            get
            {
                return this.xfIdFieldSpecified;
            }
            set
            {
                this.xfIdFieldSpecified = value;
            }
        }
        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool quotePrefix
        {
            get
            {
                return this.quotePrefixField;
            }
            set
            {
                this.quotePrefixField = value;
            }
        }
        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool pivotButton
        {
            get
            {
                return this.pivotButtonField;
            }
            set
            {
                this.pivotButtonField = value;
            }
        }
        [XmlAttribute]
        public bool applyNumberFormat
        {
            get
            {
                return this.applyNumberFormatField;
            }
            set
            {
                this.applyNumberFormatField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyNumberFormatSpecified
        {
            get
            {
                return this.applyNumberFormatFieldSpecified;
            }
            set
            {
                this.applyNumberFormatFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public bool applyFont
        {
            get
            {
                return this.applyFontField;
            }
            set
            {
                this.applyFontField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyFontSpecified
        {
            get
            {
                return this.applyFontFieldSpecified;
            }
            set
            {
                this.applyFontFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public bool applyFill
        {
            get
            {
                return this.applyFillField;
            }
            set
            {
                this.applyFillField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyFillSpecified
        {
            get
            {
                return this.applyFillFieldSpecified;
            }
            set
            {
                this.applyFillFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public bool applyBorder
        {
            get
            {
                return this.applyBorderField;
            }
            set
            {
                this.applyBorderField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyBorderSpecified
        {
            get
            {
                return this.applyBorderFieldSpecified;
            }
            set
            {
                this.applyBorderFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public bool applyAlignment
        {
            get
            {
                return this.applyAlignmentField;
            }
            set
            {
                this.applyAlignmentField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyAlignmentSpecified
        {
            get
            {
                return this.applyAlignmentFieldSpecified;
            }
            set
            {
                this.applyAlignmentFieldSpecified = value;
            }
        }
        [XmlAttribute]
        public bool applyProtection
        {
            get
            {
                return this.applyProtectionField;
            }
            set
            {
                this.applyProtectionField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applyProtectionSpecified
        {
            get
            {
                return this.applyProtectionFieldSpecified;
            }
            set
            {
                this.applyProtectionFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_CellStyleXfs
    {

        private List<CT_Xf> xfField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_CellStyleXfs()
        {
            this.xfField = new List<CT_Xf>();
        }
        [XmlElement]
        public List<CT_Xf> xf
        {
            get
            {
                return this.xfField;
            }
            set
            {
                this.xfField = value;
            }
        }
        [XmlAttribute]
        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Borders
    {

        private List<CT_Border> borderField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_Borders()
        {
            this.borderField = new List<CT_Border>();
        }
        [XmlElement]
        public List<CT_Border> border
        {
            get
            {
                return this.borderField;
            }
            set
            {
                this.borderField = value;
            }
        }
        public void SetBorderArray(CT_Border[] array)
        {
            borderField = new List<CT_Border>(array);
        }
        [XmlAttribute]
        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Fills
    {

        private List<CT_Fill> fillField;

        private uint countField;

        private bool countFieldSpecified;

        public CT_Fills()
        {
            this.fillField = new List<CT_Fill>();
        }
        [XmlElement]
        public List<CT_Fill> fill
        {
            get
            {
                return this.fillField;
            }
            set
            {
                this.fillField = value;
            }
        }
        public void SetFillArray(CT_Fill[] array)
        {
            fillField = new List<CT_Fill>(array);
        }
        [XmlAttribute]
        public uint count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }
    }


    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    [System.Xml.Serialization.XmlRootAttribute(ElementName = "sst", Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main", IsNullable = true)]
    public class CT_Sst
    {

        private List<CT_Rst> siField;

        private CT_ExtensionList extLstField;

        private int countField;

        private bool countFieldSpecified;

        private int uniqueCountField;

        private bool uniqueCountFieldSpecified;

        public CT_Sst()
        {
            this.extLstField = new CT_ExtensionList();
            this.siField = new List<CT_Rst>();
        }

        [XmlElement]
        public List<CT_Rst> si
        {
            get
            {
                return this.siField;
            }
            set
            {
                this.siField = value;
            }
        }
        [XmlElement]
        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        public int count
        {
            get
            {
                return this.countField;
            }
            set
            {
                this.countField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified
        {
            get
            {
                return this.countFieldSpecified;
            }
            set
            {
                this.countFieldSpecified = value;
            }
        }

        public int uniqueCount
        {
            get
            {
                return this.uniqueCountField;
            }
            set
            {
                this.uniqueCountField = value;
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uniqueCountSpecified
        {
            get
            {
                return this.uniqueCountFieldSpecified;
            }
            set
            {
                this.uniqueCountFieldSpecified = value;
            }
        }
    }
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_Rst
    {

        private string tField = null; // optional field -> initialize as null so that it is not serialized by default.

        private List<CT_RElt> rField = null; // optional field 

        private List<CT_PhoneticRun> rPhField = null; // optional field 

        private CT_PhoneticPr phoneticPrField = null; // optional field 

        public void Set(CT_Rst o)
        {
            this.tField = o.tField;
            this.rField = o.rField;
            this.rPhField = o.rPhField;
            this.phoneticPrField = o.phoneticPrField;
        }

        #region t
        public bool IsSetT()
        {
            return this.tField != null;
        }
        public void unsetT()
        {
            this.tField = null;
        }
        [XmlElement("t", DataType = "string")]
        public string t
        {
            get
            {
                return this.tField;
            }
            set
            {
                this.tField = value;
            }
        }
        #endregion t

        #region r
        /// <summary>
        /// Rich Text Run
        /// </summary>
        [XmlElement("r")]
        public List<CT_RElt> r
        {
            get
            {
                return this.rField;
            }
            set
            {
                this.rField = value;
            }
        }
        public CT_RElt AddNewR()
        {
            if (null == rField) { rField = new List<CT_RElt>(); }
            CT_RElt r = new CT_RElt();
            this.rField.Add(r);
            return r;
        }
        public int sizeOfRArray()
        {
            return (null == rField) ? 0 : r.Count;
        }
        public CT_RElt GetRArray(int index)
        {
            return (null == rField) ? null : this.rField[index];
        }
        #endregion r

        /// <summary>
        /// Phonetic Run
        /// </summary>
        [XmlElement("rPh")]
        public List<CT_PhoneticRun> rPh
        {
            get
            {
                return this.rPhField;
            }
            set
            {
                this.rPhField = value;
            }
        }
        /// <summary>
        /// Phonetic Properties
        /// </summary>
        [XmlElement("phoneticPr")]
        public CT_PhoneticPr phoneticPr
        {
            get
            {
                return this.phoneticPrField;
            }
            set
            {
                this.phoneticPrField = value;
            }
        }

    }

    /// <summary>
    /// Rich Text Run container.
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_RElt
    {

        private CT_RPrElt rPrField = null; // optional field 

        private string tField = string.Empty; // required field 

        public CT_RPrElt AddNewRPr()
        {
            this.rPrField = new CT_RPrElt();
            return rPrField;
        }

        /// <summary>
        /// Run Properties
        /// </summary>
        [XmlElement("rPr")]
        public CT_RPrElt rPr
        {
            get
            {
                return this.rPrField;
            }
            set
            {
                this.rPrField = value;
            }
        }

        /// <summary>
        /// Text
        /// </summary>
        [XmlElement("t")]
        public string t
        {
            get
            {
                return this.tField;
            }
            set
            {
                this.tField = value;
            }
        }
    }

    public enum FontElementNameType
    {
        b,
        charset,
        color,
        condense,
        extend,
        family,
        i,
        name,
        outline,
        rFont,
        scheme,
        shadow,
        strike,
        sz,
        u,
        vertAlign
    }
    /// <summary>
    /// Properties of Rich Text Run.
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_RPrElt
    {
        internal static XmlSerializer serializer = new XmlSerializer(typeof(CT_RPrElt));
        internal static XmlSerializerNamespaces namespaces = new XmlSerializerNamespaces(new[] {
            new XmlQualifiedName("", "http://schemas.openxmlformats.org/spreadsheetml/2006/main") });

        // all elements are optional
        private CT_FontName rFontField = null; // name of the font
        private CT_IntProperty charsetField = null;
        private CT_IntProperty familyField = null; // family of the font
        private CT_BooleanProperty bField = null; // typeface bold
        private CT_BooleanProperty iField = null;   // italic
        private CT_BooleanProperty strikeField = null; //   strike through
        private CT_BooleanProperty outlineField = null;
        private CT_BooleanProperty shadowField = null;
        private CT_BooleanProperty condenseField = null;
        private CT_BooleanProperty extendField = null;
        private CT_Color colorField = null;
        private CT_FontSize szField = null; // size of the font
        private CT_UnderlineProperty uField = null; // underline
        private CT_VerticalAlignFontProperty vertAlignField = null;  // vertical alignment of the text
        private CT_FontScheme schemeField = null;

        public static CT_RPrElt Parse(string xml)
        {
            CT_RPrElt result;
            using (StringReader stream = new StringReader(xml))
            {
                result = (CT_RPrElt)serializer.Deserialize(stream);
            }
            return result;
        }

        public static void Save(Stream stream, CT_RPrElt font)
        {
            serializer.Serialize(stream, font, namespaces);
        }

        public static string GetString(CT_Font font)
        {
            using (StringWriter writer = new StringWriter())
            {
                serializer.Serialize(writer, font, namespaces);
                return writer.ToString();
            }
        }

        #region rFont
        [XmlElement]
        public CT_FontName rFont
        {
            get { return this.rFontField; }
            set { this.rFontField = value; }
        }
        [XmlIgnore]
        // do not remove this field or change the name, because it is automatically used by the XmlSerializer to decide if the name attribute should be printed or not.
        public bool rFontSpecified
        {
            get { return (null != rFontField); }
        }
        public int sizeOfRFontArray()
        {
            return this.rFontField == null ? 0 : 1;
        }
        public CT_FontName AddNewRFont()
        {
            this.rFontField = new CT_FontName();
            return this.rFontField;
        }
        public CT_FontName GetRFontArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.rFontField;
        }
        #endregion rFont

        #region charset
        [XmlElement]
        public CT_IntProperty charset
        {
            get { return this.charsetField; }
            set { this.charsetField = value; }
        }
        [XmlIgnore]
        public bool charsetSpecified
        {
            get { return (null != charsetField); }
        }
        public int sizeOfCharsetArray()
        {
            return this.charsetField == null ? 0 : 1;
        }
        public CT_IntProperty AddNewCharset()
        {
            this.charsetField = new CT_IntProperty();
            return this.charsetField;
        }
        public CT_IntProperty GetCharsetArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.charsetField;
        }
        #endregion charset

        #region family
        [XmlElement]
        public CT_IntProperty family
        {
            get { return this.familyField; }
            set { this.familyField = value; }
        }
        [XmlIgnore]
        public bool familySpecified
        {
            get { return (null != familyField); }
        }
        public int sizeOfFamilyArray()
        {
            return this.familyField == null ? 0 : 1;
        }
        public CT_IntProperty AddNewFamily()
        {
            this.familyField = new CT_IntProperty();
            return this.familyField;
        }
        //public void SetFamilyArray()
        //{
        //    this.familyField = null;
        //}
        public CT_IntProperty GetFamilyArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.familyField;
        }
        #endregion family

        #region b
        [XmlElement]
        public CT_BooleanProperty b
        {
            get { return this.bField; }
            set { this.bField = value; }
        }
        [XmlIgnore]
        public bool bSpecified
        {
            get { return (null != bField); }
        }
        public int sizeOfBArray()
        {
            return this.bField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewB()
        {
            this.bField = new CT_BooleanProperty();
            return this.bField;
        }
        public void SetBArray(CT_BooleanProperty[] array)
        {
            this.bField = array.Length > 0 ? array[0] : null;
        }
        public CT_BooleanProperty GetBArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.bField;
        }
        #endregion b

        #region i
        [XmlElement]
        public CT_BooleanProperty i
        {
            get { return this.iField; }
            set { this.iField = value; }
        }
        [XmlIgnore]
        public bool iSpecified
        {
            get { return (null != iField); }
        }
        public int sizeOfIArray()
        {
            return this.iField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewI()
        {
            this.iField = new CT_BooleanProperty();
            return this.iField;
        }
        public void SetIArray(CT_BooleanProperty[] array)
        {
            this.iField = array.Length > 0 ? array[0] : null;
        }
        public CT_BooleanProperty GetIArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.iField;
        }
        #endregion i

        #region strike
        [XmlElement]
        public CT_BooleanProperty strike
        {
            get { return this.strikeField; }
            set { this.strikeField = value; }
        }
        [XmlIgnore]
        public bool strikeSpecified
        {
            get { return (null != strikeField); }
        }
        public int sizeOfStrikeArray()
        {
            return this.strikeField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewStrike()
        {
            this.strikeField = new CT_BooleanProperty();
            return this.strikeField;
        }
        public void SetStrikeArray(CT_BooleanProperty[] array)
        {
            this.strikeField = array.Length > 0 ? array[0] : null;
        }
        public CT_BooleanProperty GetStrikeArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.strikeField;
        }
        #endregion strike

        #region outline
        [XmlElement]
        public CT_BooleanProperty outline
        {
            get { return this.outlineField; }
            set { this.outlineField = value; }
        }
        [XmlIgnore]
        public bool outlineSpecified
        {
            get { return (null != outlineField); }
        }
        public int sizeOfOutlineArray()
        {
            return this.outlineField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewOutline()
        {
            this.outlineField = new CT_BooleanProperty();
            return this.outlineField;
        }
        public void SetOutlineArray(CT_BooleanProperty[] array)
        {
            this.outlineField = array.Length > 0 ? array[0] : null;
        }
        public CT_BooleanProperty GetOutlineArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.outlineField;
        }
        #endregion outline

        #region shadow
        [XmlElement]
        public CT_BooleanProperty shadow
        {
            get { return this.shadowField; }
            set { this.shadowField = value; }
        }
        [XmlIgnore]
        public bool shadowSpecified
        {
            get { return (null != shadowField); }
        }
        public int sizeOfShadowArray()
        {
            return this.shadowField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewShadow()
        {
            this.shadowField = new CT_BooleanProperty();
            return this.shadowField;
        }
        public CT_BooleanProperty GetShadowArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.shadowField;
        }
        #endregion shadow

        #region condense
        [XmlElement]
        public CT_BooleanProperty condense
        {
            get { return this.condenseField; }
            set { this.condenseField = value; }
        }
        [XmlIgnore]
        public bool condenseSpecified
        {
            get { return (null != condenseField); }
        }
        public int sizeOfCondenseArray()
        {
            return this.condenseField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewCondense()
        {
            this.condenseField = new CT_BooleanProperty();
            return this.condenseField;
        }
        public CT_BooleanProperty GetCondenseArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.condenseField;
        }
        #endregion condense

        #region extend
        [XmlElement]
        public CT_BooleanProperty extend
        {
            get { return this.extendField; }
            set { this.extendField = value; }
        }
        [XmlIgnore]
        public bool extendSpecified
        {
            get { return (null != extendField); }
        }
        public int sizeOfExtendArray()
        {
            return this.extendField == null ? 0 : 1;
        }
        public CT_BooleanProperty AddNewExtend()
        {
            this.extendField = new CT_BooleanProperty();
            return this.extendField;
        }
        public CT_BooleanProperty GetExtendArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.extendField;
        }
        #endregion extend

        #region color
        [XmlElement]
        public CT_Color color
        {
            get { return this.colorField; }
            set { this.colorField = value; }
        }
        [XmlIgnore]
        public bool colorSpecified
        {
            get { return (null != colorField); }
        }
        public int sizeOfColorArray()
        {
            return this.colorField == null ? 0 : 1;
        }
        public CT_Color GetColorArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.colorField;
        }
        public void SetColorArray(CT_Color[] array)
        {
            this.colorField = array.Length > 0 ? array[0] : null;
        }
        public CT_Color AddNewColor()
        {
            this.colorField = new CT_Color();
            return this.colorField;
        }
        #endregion color

        #region sz
        [XmlElement]
        public CT_FontSize sz
        {
            get { return this.szField; }
            set { this.szField = value; }
        }
        [XmlIgnore]
        public bool szSpecified
        {
            get { return (null != szField); }
        }
        public int sizeOfSzArray()
        {
            return this.szField == null ? 0 : 1;
        }
        public CT_FontSize AddNewSz()
        {
            this.szField = new CT_FontSize();
            return this.szField;
        }
        public void SetSzArray(CT_FontSize[] array)
        {
            this.szField = array.Length > 0 ? array[0] : null;
        }
        public CT_FontSize GetSzArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.szField;
        }
        #endregion sz

        #region u
        [XmlElement]
        public CT_UnderlineProperty u
        {
            get { return this.uField; }
            set { this.uField = value; }
        }
        [XmlIgnore]
        public bool uSpecified
        {
            get { return (null != uField); }
        }
        public int sizeOfUArray()
        {
            return this.uField == null ? 0 : 1;
        }
        public CT_UnderlineProperty AddNewU()
        {
            this.uField = new CT_UnderlineProperty();
            return this.uField;
        }
        public void SetUArray(CT_UnderlineProperty[] array)
        {
            this.uField = array.Length > 0 ? array[0] : null;
        }
        public CT_UnderlineProperty GetUArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.uField;
        }
        #endregion u

        #region vertAlign
        [XmlElement]
        public CT_VerticalAlignFontProperty vertAlign
        {
            get { return this.vertAlignField; }
            set { this.vertAlignField = value; }
        }
        [XmlIgnore]
        public bool vertAlignSpecified
        {
            get { return (null != vertAlignField); }
        }
        public int sizeOfVertAlignArray()
        {
            return this.vertAlignField == null ? 0 : 1;
        }
        public CT_VerticalAlignFontProperty AddNewVertAlign()
        {
            this.vertAlignField = new CT_VerticalAlignFontProperty();
            return this.vertAlignField;
        }
        public void SetVertAlignArray(CT_VerticalAlignFontProperty[] array)
        {
            this.vertAlignField = array.Length > 0 ? array[0] : null;
        }
        public CT_VerticalAlignFontProperty GetVertAlignArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.vertAlignField;
        }
        #endregion vertAlign

        #region scheme
        [XmlElement]
        public CT_FontScheme scheme
        {
            get { return this.schemeField; }
            set { this.schemeField = value; }
        }
        [XmlIgnore]
        public bool schemeSpecified
        {
            get { return (null != schemeField); }
        }
        public int sizeOfSchemeArray()
        {
            return this.schemeField == null ? 0 : 1;
        }
        public CT_FontScheme AddNewScheme()
        {
            this.schemeField = new CT_FontScheme();
            return this.schemeField;
        }
        public CT_FontScheme GetSchemeArray(int index)
        {
            if (0 != index) { throw new IndexOutOfRangeException("Only an index of 0 is supported"); }
            return this.schemeField;
        }
        #endregion scheme
    }

    /// <summary>
    /// Rich Text Phonetic Run
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
        ElementName = "rPh",
        IsNullable = false)]
    public class CT_PhoneticRun
    {

        private string tField;

        private uint sbField;

        private uint ebField;

        public string t
        {
            get
            {
                return this.tField;
            }
            set
            {
                this.tField = value;
            }
        }

        public uint sb
        {
            get
            {
                return this.sbField;
            }
            set
            {
                this.sbField = value;
            }
        }

        public uint eb
        {
            get
            {
                return this.ebField;
            }
            set
            {
                this.ebField = value;
            }
        }
    }

    /// <summary>
    /// Properties of the Rich Text Phonetic Run
    /// </summary>
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
        ElementName = "phoneticPr",
        IsNullable = false)]
    public class CT_PhoneticPr
    {
        private uint fontIdField;

        private ST_PhoneticType typeField;

        private ST_PhoneticAlignment alignmentField;

        public CT_PhoneticPr()
        {
            this.typeField = ST_PhoneticType.fullwidthKatakana;
            this.alignmentField = ST_PhoneticAlignment.left;
        }

        public uint fontId
        {
            get
            {
                return this.fontIdField;
            }
            set
            {
                this.fontIdField = value;
            }
        }

        [System.ComponentModel.DefaultValueAttribute(ST_PhoneticType.fullwidthKatakana)]
        public ST_PhoneticType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [System.ComponentModel.DefaultValueAttribute(ST_PhoneticAlignment.left)]
        public ST_PhoneticAlignment alignment
        {
            get
            {
                return this.alignmentField;
            }
            set
            {
                this.alignmentField = value;
            }
        }
    }

    public enum ST_PhoneticType
    {

        /// <remarks/>
        halfwidthKatakana,

        /// <remarks/>
        fullwidthKatakana,

        /// <remarks/>
        Hiragana,

        /// <remarks/>
        noConversion,
    }

    public enum ST_PhoneticAlignment
    {

        /// <remarks/>
        noControl,

        /// <remarks/>
        left,

        /// <remarks/>
        center,

        /// <remarks/>
        distributed,
    }
}
