// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>schemas</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml.Serialization;

namespace NPOI.OpenXmlFormats.Dml
{

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_OfficeArtExtension
    {

        private System.Xml.XmlElement anyField; // 1..1

        private string uriField = null;

        [XmlAnyElement(Order = 0)]
        public System.Xml.XmlElement Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        [XmlAttribute(DataType = "token")]
        public string uri
        {
            get
            {
                return this.uriField;
            }
            set
            {
                this.uriField = value;
            }
        }
        [XmlIgnore]
        public bool uriSpecified
        {
            get { return (null != uriField); }
        }

    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Angle
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_PositiveFixedAngle
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Percentage
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_PositivePercentage
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_FixedPercentage
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_PositiveFixedPercentage
    {

        private int valField;

        public int val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Ratio
    {

        private long nField;

        private long dField;

        public long n
        {
            get
            {
                return this.nField;
            }
            set
            {
                this.nField = value;
            }
        }

        public long d
        {
            get
            {
                return this.dField;
            }
            set
            {
                this.dField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Point2D
    {

        private long xField;

        private long yField;

        public long x
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        public long y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_PositiveSize2D
    {

        private long cxField;

        private long cyField;

        public long cx
        {
            get
            {
                return this.cxField;
            }
            set
            {
                this.cxField = value;
            }
        }

        public long cy
        {
            get
            {
                return this.cyField;
            }
            set
            {
                this.cyField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_ComplementTransform
    {
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_InverseTransform
    {
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_GrayscaleTransform
    {
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_GammaTransform
    {
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_InverseGammaTransform
    {
    }
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public enum ScRgbColorType
    {
        tint,
        shade,
        comp,
        inv,
        gray,
        alpha,
        alphaOff,
        alphaMod,
        hue,
        hueOff,
        hueMod,
        sat,
        satOff,
        satMod,
        lum,
        lumOff,
        lumMod,
        red,
        redOff,
        redMod,
        green,
        greenOff,
        greenMod,
        blue,
        blueOff,
        blueMod,
        gamma,
        invGamma
    }
    [Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_ScRgbColor
    {

        private List<object> itemsField;

        private List<ScRgbColorType> itemsElementNameField;

        private int rField;

        private int gField;

        private int bField;

        public CT_ScRgbColor()
        {
            this.itemsElementNameField = new List<ScRgbColorType>();
            this.itemsField = new List<object>();
        }
        [XmlElement("tint", typeof(CT_PositiveFixedPercentage))]
        [XmlElement("shade", typeof(CT_PositiveFixedPercentage))]
        [XmlElement("comp", typeof(CT_ComplementTransform))]
        [XmlElement("inv", typeof(CT_InverseTransform))]
        [XmlElement("gray", typeof(CT_GrayscaleTransform))]
        [XmlElement("alpha", typeof(CT_PositiveFixedPercentage))]
        [XmlElement("alphaOff", typeof(CT_FixedPercentage))]
        [XmlElement("alphaMod", typeof(CT_PositivePercentage))]
        [XmlElement("hue", typeof(CT_PositiveFixedAngle))]
        [XmlElement("hueOff", typeof(CT_Angle))]
        [XmlElement("hueMod", typeof(CT_PositivePercentage))]
        [XmlElement("sat", typeof(CT_Percentage))]
        [XmlElement("satOff", typeof(CT_Percentage))]
        [XmlElement("satMod", typeof(CT_Percentage))]
        [XmlElement("lum", typeof(CT_Percentage))]
        [XmlElement("lumOff", typeof(CT_Percentage))]
        [XmlElement("lumMod", typeof(CT_Percentage))]
        [XmlElement("red", typeof(CT_Percentage))]
        [XmlElement("redOff", typeof(CT_Percentage))]
        [XmlElement("redMod", typeof(CT_Percentage))]
        [XmlElement("green", typeof(CT_Percentage))]
        [XmlElement("greenOff", typeof(CT_Percentage))]
        [XmlElement("greenMod", typeof(CT_Percentage))]
        [XmlElement("blue", typeof(CT_Percentage))]
        [XmlElement("blueOff", typeof(CT_Percentage))]
        [XmlElement("blueMod", typeof(CT_Percentage))]
        [XmlElement("gamma", typeof(CT_GammaTransform))]
        [XmlElement("invGamma", typeof(CT_InverseGammaTransform))]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField.ToArray();
            }
            set
            {
                this.itemsField = new List<object>(value);
            }
        }

        [XmlElement("ItemsElementName")]
        //[XmlIgnore()]
        public ScRgbColorType[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField.ToArray();
            }
            set
            {
                this.itemsElementNameField = new List<ScRgbColorType>(value);
            }
        }

        public int r
        {
            get
            {
                return this.rField;
            }
            set
            {
                this.rField = value;
            }
        }

        public int g
        {
            get
            {
                return this.gField;
            }
            set
            {
                this.gField = value;
            }
        }

        public int b
        {
            get
            {
                return this.bField;
            }
            set
            {
                this.bField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_SRgbColor
    {

        private List<object> itemsField;

        private List<ItemsChoiceType1> itemsElementNameField;

        private byte[] valField;

        public CT_SRgbColor()
        {
            this.itemsElementNameField = new List<ItemsChoiceType1>();
            this.itemsField = new List<object>();
        }
        [XmlElement("alpha", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlElement("alphaMod", typeof(CT_PositivePercentage), Order = 0)]
        [XmlElement("alphaOff", typeof(CT_FixedPercentage), Order = 0)]
        [XmlElement("blue", typeof(CT_Percentage), Order = 0)]
        [XmlElement("blueMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("blueOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("comp", typeof(CT_ComplementTransform), Order = 0)]
        [XmlElement("gamma", typeof(CT_GammaTransform), Order = 0)]
        [XmlElement("gray", typeof(CT_GrayscaleTransform), Order = 0)]
        [XmlElement("green", typeof(CT_Percentage), Order = 0)]
        [XmlElement("greenMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("greenOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("hue", typeof(CT_PositiveFixedAngle), Order = 0)]
        [XmlElement("hueMod", typeof(CT_PositivePercentage), Order = 0)]
        [XmlElement("hueOff", typeof(CT_Angle), Order = 0)]
        [XmlElement("inv", typeof(CT_InverseTransform), Order = 0)]
        [XmlElement("invGamma", typeof(CT_InverseGammaTransform), Order = 0)]
        [XmlElement("lum", typeof(CT_Percentage), Order = 0)]
        [XmlElement("lumMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("lumOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("red", typeof(CT_Percentage), Order = 0)]
        [XmlElement("redMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("redOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("sat", typeof(CT_Percentage), Order = 0)]
        [XmlElement("satMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("satOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("shade", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlElement("tint", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsField = new List<object>();
                else
                    this.itemsField = new List<object>(value);
            }
        }
        [XmlElement("ItemsElementName", Order = 1)]
        [XmlIgnore]
        public ItemsChoiceType1[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsElementNameField = new List<ItemsChoiceType1>();
                else
                    this.itemsElementNameField = new List<ItemsChoiceType1>(value);
            }
        }
        [XmlAttribute(DataType = "hexBinary")]
        public byte[] val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    public enum ItemsChoiceType1
    {


        alpha,


        alphaMod,


        alphaOff,


        blue,


        blueMod,


        blueOff,


        comp,


        gamma,


        gray,


        green,


        greenMod,


        greenOff,


        hue,


        hueMod,


        hueOff,


        inv,


        invGamma,


        lum,


        lumMod,


        lumOff,


        red,


        redMod,


        redOff,


        sat,


        satMod,


        satOff,


        shade,


        tint,
    }

    public enum ItemsChoiceType3
    {


        alpha,


        alphaMod,


        alphaOff,


        blue,


        blueMod,


        blueOff,


        comp,


        gamma,


        gray,


        green,


        greenMod,


        greenOff,


        hue,


        hueMod,


        hueOff,


        inv,


        invGamma,


        lum,


        lumMod,


        lumOff,


        red,


        redMod,


        redOff,


        sat,


        satMod,


        satOff,


        shade,


        tint,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_SchemeColor
    {

        private List<object> itemsField;

        private List<ItemsChoiceType4> itemsElementNameField;

        private ST_SchemeColorVal valField;

        public CT_SchemeColor()
        {
            this.itemsElementNameField = new List<ItemsChoiceType4>();
            this.itemsField = new List<object>();
        }

        public CT_PositiveFixedPercentage AddNewShade()
        {
            throw new NotImplementedException();
        }
        [XmlElement("alpha", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlElement("alphaMod", typeof(CT_PositivePercentage), Order = 0)]
        [XmlElement("alphaOff", typeof(CT_FixedPercentage), Order = 0)]
        [XmlElement("blue", typeof(CT_Percentage), Order = 0)]
        [XmlElement("blueMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("blueOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("comp", typeof(CT_ComplementTransform), Order = 0)]
        [XmlElement("gamma", typeof(CT_GammaTransform), Order = 0)]
        [XmlElement("gray", typeof(CT_GrayscaleTransform), Order = 0)]
        [XmlElement("green", typeof(CT_Percentage), Order = 0)]
        [XmlElement("greenMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("greenOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("hue", typeof(CT_PositiveFixedAngle), Order = 0)]
        [XmlElement("hueMod", typeof(CT_PositivePercentage), Order = 0)]
        [XmlElement("hueOff", typeof(CT_Angle), Order = 0)]
        [XmlElement("inv", typeof(CT_InverseTransform), Order = 0)]
        [XmlElement("invGamma", typeof(CT_InverseGammaTransform), Order = 0)]
        [XmlElement("lum", typeof(CT_Percentage), Order = 0)]
        [XmlElement("lumMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("lumOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("red", typeof(CT_Percentage), Order = 0)]
        [XmlElement("redMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("redOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("sat", typeof(CT_Percentage), Order = 0)]
        [XmlElement("satMod", typeof(CT_Percentage), Order = 0)]
        [XmlElement("satOff", typeof(CT_Percentage), Order = 0)]
        [XmlElement("shade", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlElement("tint", typeof(CT_PositiveFixedPercentage), Order = 0)]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsField = new List<object>();
                else
                    this.itemsField = new List<object>(value);
            }
        }
        [XmlElement("ItemsElementName", Order = 1)]
        [XmlIgnore]
        public ItemsChoiceType4[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsElementNameField = new List<ItemsChoiceType4>();
                else
                    this.itemsElementNameField = new List<ItemsChoiceType4>(value);
            }
        }
        [XmlAttribute]
        public ST_SchemeColorVal val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    public enum ItemsChoiceType4
    {


        alpha,


        alphaMod,


        alphaOff,


        blue,


        blueMod,


        blueOff,


        comp,


        gamma,


        gray,


        green,


        greenMod,


        greenOff,


        hue,


        hueMod,


        hueOff,


        inv,


        invGamma,


        lum,


        lumMod,


        lumOff,


        red,


        redMod,


        redOff,


        sat,


        satMod,


        satOff,


        shade,


        tint,
    }

    public enum ST_SchemeColorVal
    {


        bg1,


        tx1,


        bg2,


        tx2,


        accent1,


        accent2,


        accent3,


        accent4,


        accent5,


        accent6,


        hlink,


        folHlink,


        phClr,


        dk1,


        lt1,


        dk2,


        lt2,
    }


    public enum ST_PresetColorVal
    {


        aliceBlue,


        antiqueWhite,


        aqua,


        aquamarine,


        azure,


        beige,


        bisque,


        black,


        blanchedAlmond,


        blue,


        blueViolet,


        brown,


        burlyWood,


        cadetBlue,


        chartreuse,


        chocolate,


        coral,


        cornflowerBlue,


        cornsilk,


        crimson,


        cyan,


        dkBlue,


        dkCyan,


        dkGoldenrod,


        dkGray,


        dkGreen,


        dkKhaki,


        dkMagenta,


        dkOliveGreen,


        dkOrange,


        dkOrchid,


        dkRed,


        dkSalmon,


        dkSeaGreen,


        dkSlateBlue,


        dkSlateGray,


        dkTurquoise,


        dkViolet,


        deepPink,


        deepSkyBlue,


        dimGray,


        dodgerBlue,


        firebrick,


        floralWhite,


        forestGreen,


        fuchsia,


        gainsboro,


        ghostWhite,


        gold,


        goldenrod,


        gray,


        green,


        greenYellow,


        honeydew,


        hotPink,


        indianRed,


        indigo,


        ivory,


        khaki,


        lavender,


        lavenderBlush,


        lawnGreen,


        lemonChiffon,


        ltBlue,


        ltCoral,


        ltCyan,


        ltGoldenrodYellow,


        ltGray,


        ltGreen,


        ltPink,


        ltSalmon,


        ltSeaGreen,


        ltSkyBlue,


        ltSlateGray,


        ltSteelBlue,


        ltYellow,


        lime,


        limeGreen,


        linen,


        magenta,


        maroon,


        medAquamarine,


        medBlue,


        medOrchid,


        medPurple,


        medSeaGreen,


        medSlateBlue,


        medSpringGreen,


        medTurquoise,


        medVioletRed,


        midnightBlue,


        mintCream,


        mistyRose,


        moccasin,


        navajoWhite,


        navy,


        oldLace,


        olive,


        oliveDrab,


        orange,


        orangeRed,


        orchid,


        paleGoldenrod,


        paleGreen,


        paleTurquoise,


        paleVioletRed,


        papayaWhip,


        peachPuff,


        peru,


        pink,


        plum,


        powderBlue,


        purple,


        red,


        rosyBrown,


        royalBlue,


        saddleBrown,


        salmon,


        sandyBrown,


        seaGreen,


        seaShell,


        sienna,


        silver,


        skyBlue,


        slateBlue,


        slateGray,


        snow,


        springGreen,


        steelBlue,


        tan,


        teal,


        thistle,


        tomato,


        turquoise,


        violet,


        wheat,


        white,


        whiteSmoke,


        yellow,


        yellowGreen,
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_OfficeArtExtensionList
    {

        private List<CT_OfficeArtExtension> extField = null; // 0..*

        public CT_OfficeArtExtensionList()
        {
            this.extField = new List<CT_OfficeArtExtension>();
        }

        [XmlElement]
        public List<CT_OfficeArtExtension> ext
        {
            get
            {
                return this.extField;
            }
            set
            {
                this.extField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Scale2D
    {

        private CT_Ratio sxField;

        private CT_Ratio syField;

        public CT_Scale2D()
        {
            this.syField = new CT_Ratio();
            this.sxField = new CT_Ratio();
        }

        public CT_Ratio sx
        {
            get
            {
                return this.sxField;
            }
            set
            {
                this.sxField = value;
            }
        }

        public CT_Ratio sy
        {
            get
            {
                return this.syField;
            }
            set
            {
                this.syField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Transform2D
    {

        private CT_Point2D offField = null;

        private CT_PositiveSize2D extField = null;

        private int? rotField = null;

        private bool? flipHField = null;

        private bool? flipVField = null;

        public CT_PositiveSize2D AddNewExt()
        {
            this.extField = new CT_PositiveSize2D();
            return this.extField;
        }
        public CT_Point2D AddNewOff()
        {
            this.offField = new CT_Point2D();
            return this.offField;
        }

        [XmlElement]
        public CT_Point2D off
        {
            get
            {
                return this.offField;
            }
            set
            {
                this.offField = value;
            }
        }

        [XmlElement]
        public CT_PositiveSize2D ext
        {
            get
            {
                return this.extField;
            }
            set
            {
                this.extField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(0)]
        public int rot
        {
            get
            {
                return null == this.rotField ? 0 : (int)rotField;
            }
            set
            {
                this.rotField = value;
            }
        }
        [XmlIgnore]
        public bool rotSpecified
        {
            get { return (null != rotField); }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool flipH
        {
            get
            {
                return null == this.flipHField ? false:(bool)flipHField;
            }
            set
            {
                this.flipHField = value;
            }
        }
        [XmlIgnore]
        public bool flipHSpecified
        {
            get { return (null != flipHField); }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool flipV
        {
            get
            {
                return null == this.flipVField ? false:(bool)flipVField;
            }
            set
            {
                this.flipVField = value;
            }
        }
        [XmlIgnore]
        public bool flipVSpecified
        {
            get { return (null != flipVField); }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_GroupTransform2D
    {

        private CT_Point2D offField;

        private CT_PositiveSize2D extField;

        private CT_Point2D chOffField;

        private CT_PositiveSize2D chExtField;

        private int rotField;

        private bool flipHField;

        private bool flipVField;

        public CT_GroupTransform2D()
        {
            //this.chExtField = new CT_PositiveSize2D();
            //this.chOffField = new CT_Point2D();
            //this.extField = new CT_PositiveSize2D();
            //this.offField = new CT_Point2D();
            this.rotField = 0;
            this.flipHField = false;
            this.flipVField = false;
        }

        public CT_PositiveSize2D AddNewExt()
        {
            this.extField = new CT_PositiveSize2D();
            return this.extField;
        }
        public CT_Point2D AddNewOff()
        {
            this.offField = new CT_Point2D();
            return this.offField;
        }
        public CT_PositiveSize2D AddNewChExt()
        {
            this.chExtField = new CT_PositiveSize2D();
            return this.chExtField;
        }
        public CT_Point2D AddNewChOff()
        {
            this.chOffField = new CT_Point2D();
            return this.chOffField;
        }


        public CT_Point2D off
        {
            get
            {
                return this.offField;
            }
            set
            {
                this.offField = value;
            }
        }

        public CT_PositiveSize2D ext
        {
            get
            {
                return this.extField;
            }
            set
            {
                this.extField = value;
            }
        }

        public CT_Point2D chOff
        {
            get
            {
                return this.chOffField;
            }
            set
            {
                this.chOffField = value;
            }
        }

        public CT_PositiveSize2D chExt
        {
            get
            {
                return this.chExtField;
            }
            set
            {
                this.chExtField = value;
            }
        }

        [DefaultValue(0)]
        public int rot
        {
            get
            {
                return this.rotField;
            }
            set
            {
                this.rotField = value;
            }
        }

        [DefaultValue(false)]
        public bool flipH
        {
            get
            {
                return this.flipHField;
            }
            set
            {
                this.flipHField = value;
            }
        }

        [DefaultValue(false)]
        public bool flipV
        {
            get
            {
                return this.flipVField;
            }
            set
            {
                this.flipVField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Point3D
    {

        private long xField;

        private long yField;

        private long zField;

        public long x
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        public long y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }

        public long z
        {
            get
            {
                return this.zField;
            }
            set
            {
                this.zField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Vector3D
    {

        private long dxField;

        private long dyField;

        private long dzField;

        public long dx
        {
            get
            {
                return this.dxField;
            }
            set
            {
                this.dxField = value;
            }
        }

        public long dy
        {
            get
            {
                return this.dyField;
            }
            set
            {
                this.dyField = value;
            }
        }

        public long dz
        {
            get
            {
                return this.dzField;
            }
            set
            {
                this.dzField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_SphereCoords
    {

        private int latField;

        private int lonField;

        private int revField;

        public int lat
        {
            get
            {
                return this.latField;
            }
            set
            {
                this.latField = value;
            }
        }

        public int lon
        {
            get
            {
                return this.lonField;
            }
            set
            {
                this.lonField = value;
            }
        }

        public int rev
        {
            get
            {
                return this.revField;
            }
            set
            {
                this.revField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_RelativeRect
    {
        private int? lField; // all attributes are percentage
        private int? tField;
        private int? rField;
        private int? bField;

        [XmlAttribute]
        [DefaultValue(0)]
        public int l
        {
            get { return (int)this.lField; }
            set { this.lField = value; }
        }
        [XmlIgnore]
        public bool lSpecified
        {
            get { return (null != lField); }
        }

        [DefaultValue(0)]
        public int t
        {
            get { return (int)this.tField; }
            set { this.tField = value; }
        }
        [XmlIgnore]
        public bool tSpecified
        {
            get { return (null != tField); }
        }

        [DefaultValue(0)]
        public int r
        {
            get { return (int)this.rField; }
            set { this.rField = value; }
        }
        [XmlIgnore]
        public bool rSpecified
        {
            get { return (null != rField); }
        }

        [DefaultValue(0)]
        public int b
        {
            get { return (int)this.bField; }
            set { this.bField = value; }
        }
        [XmlIgnore]
        public bool bSpecified
        {
            get { return (null != bField); }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Color
    {

        private CT_ScRgbColor scrgbClrField;

        private CT_SRgbColor srgbClrField;

        private CT_HslColor hslClrField;

        private CT_SystemColor sysClrField;

        private CT_SchemeColor schemeClrField;

        private CT_PresetColor prstClrField;

        public CT_Color()
        {
            this.prstClrField = new CT_PresetColor();
            this.schemeClrField = new CT_SchemeColor();
            this.sysClrField = new CT_SystemColor();
            this.hslClrField = new CT_HslColor();
            this.srgbClrField = new CT_SRgbColor();
            this.scrgbClrField = new CT_ScRgbColor();
        }

        public CT_ScRgbColor scrgbClr
        {
            get
            {
                return this.scrgbClrField;
            }
            set
            {
                this.scrgbClrField = value;
            }
        }

        public CT_SRgbColor srgbClr
        {
            get
            {
                return this.srgbClrField;
            }
            set
            {
                this.srgbClrField = value;
            }
        }

        public CT_HslColor hslClr
        {
            get
            {
                return this.hslClrField;
            }
            set
            {
                this.hslClrField = value;
            }
        }

        public CT_SystemColor sysClr
        {
            get
            {
                return this.sysClrField;
            }
            set
            {
                this.sysClrField = value;
            }
        }

        public CT_SchemeColor schemeClr
        {
            get
            {
                return this.schemeClrField;
            }
            set
            {
                this.schemeClrField = value;
            }
        }

        public CT_PresetColor prstClr
        {
            get
            {
                return this.prstClrField;
            }
            set
            {
                this.prstClrField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_ColorMRU
    {

        private List<object> itemsField;

        public CT_ColorMRU()
        {
            this.itemsField = new List<object>();
        }

        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_EmbeddedWAVAudioFile
    {

        private string embedField;

        private string nameField;

        private bool builtInField;

        public CT_EmbeddedWAVAudioFile()
        {
            this.nameField = "";
            this.builtInField = false;
        }

        public string embed
        {
            get
            {
                return this.embedField;
            }
            set
            {
                this.embedField = value;
            }
        }

        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        [DefaultValue(false)]
        public bool builtIn
        {
            get
            {
                return this.builtInField;
            }
            set
            {
                this.builtInField = value;
            }
        }
    }

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Hyperlink
    {

        private CT_EmbeddedWAVAudioFile sndField;

        private CT_OfficeArtExtensionList extLstField;

        private string idField;

        private string invalidUrlField;

        private string actionField;

        private string tgtFrameField;

        private string tooltipField;

        private bool historyField;

        private bool highlightClickField;

        private bool endSndField;

        public CT_Hyperlink()
        {
            this.extLstField = new CT_OfficeArtExtensionList();
            this.sndField = new CT_EmbeddedWAVAudioFile();
            this.invalidUrlField = "";
            this.actionField = "";
            this.tgtFrameField = "";
            this.tooltipField = "";
            this.historyField = true;
            this.highlightClickField = false;
            this.endSndField = false;
        }

        public CT_EmbeddedWAVAudioFile snd
        {
            get
            {
                return this.sndField;
            }
            set
            {
                this.sndField = value;
            }
        }

        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        [DefaultValue("")]
        public string invalidUrl
        {
            get
            {
                return this.invalidUrlField;
            }
            set
            {
                this.invalidUrlField = value;
            }
        }

        [DefaultValue("")]
        public string action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }

        [DefaultValue("")]
        public string tgtFrame
        {
            get
            {
                return this.tgtFrameField;
            }
            set
            {
                this.tgtFrameField = value;
            }
        }

        [DefaultValue("")]
        public string tooltip
        {
            get
            {
                return this.tooltipField;
            }
            set
            {
                this.tooltipField = value;
            }
        }

        [DefaultValue(true)]
        public bool history
        {
            get
            {
                return this.historyField;
            }
            set
            {
                this.historyField = value;
            }
        }

        [DefaultValue(false)]
        public bool highlightClick
        {
            get
            {
                return this.highlightClickField;
            }
            set
            {
                this.highlightClickField = value;
            }
        }

        [DefaultValue(false)]
        public bool endSnd
        {
            get
            {
                return this.endSndField;
            }
            set
            {
                this.endSndField = value;
            }
        }
    }
    public enum ST_BlackWhiteMode
    {
        NONE,

        clr,


        auto,


        gray,


        ltGray,


        invGray,


        grayWhite,


        blackGray,


        blackWhite,


        black,


        white,


        hidden,
    }
}
