// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>NPOI.OpenXmlFormats</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Generic;
using NPOI.OpenXmlFormats.Shared;
using NPOI.OpenXmlFormats.Dml;
using System.IO;
using NPOI.OpenXml4Net.Util;
using System.Xml;

namespace NPOI.OpenXmlFormats.Wordprocessing
{


    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot("recipients", Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = false)]
    public class CT_Recipients
    {

        private List<CT_RecipientData> recipientDataField;

        public CT_Recipients()
        {
            this.recipientDataField = new List<CT_RecipientData>();
        }

        [XmlElement("recipientData", Order = 0)]
        public List<CT_RecipientData> recipientData
        {
            get
            {
                return this.recipientDataField;
            }
            set
            {
                this.recipientDataField = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_RecipientData
    {

        private CT_OnOff activeField;

        private CT_DecimalNumber columnField;

        private byte[] uniqueTagField;

        public CT_RecipientData()
        {
            this.columnField = new CT_DecimalNumber();
            this.activeField = new CT_OnOff();
        }

        [XmlElement(Order = 0)]
        public CT_OnOff active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_DecimalNumber column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        [XmlElement(DataType = "base64Binary", Order = 2)]
        public byte[] uniqueTag
        {
            get
            {
                return this.uniqueTagField;
            }
            set
            {
                this.uniqueTagField = value;
            }
        }
    }
    
    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot("txbxContent", Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = false)]
    public class CT_TxbxContent
    {

        private object[] itemsField;

        private ItemsChoiceType[] itemsElementNameField;

        public CT_TxbxContent()
        {
            this.itemsElementNameField = new ItemsChoiceType[0];
            this.itemsField = new object[0];
        }

        [XmlElement("oMath", typeof(CT_OMath), Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/math", Order = 0)]
        [XmlElement("oMathPara", typeof(CT_OMathPara), Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/math", Order = 0)]
        [XmlElement("altChunk", typeof(CT_AltChunk), Order = 0)]
        [XmlElement("bookmarkEnd", typeof(CT_MarkupRange), Order = 0)]
        [XmlElement("bookmarkStart", typeof(CT_Bookmark), Order = 0)]
        [XmlElement("commentRangeEnd", typeof(CT_MarkupRange), Order = 0)]
        [XmlElement("commentRangeStart", typeof(CT_MarkupRange), Order = 0)]
        [XmlElement("customXml", typeof(CT_CustomXmlBlock), Order = 0)]
        [XmlElement("customXmlDelRangeEnd", typeof(CT_Markup), Order = 0)]
        [XmlElement("customXmlDelRangeStart", typeof(CT_TrackChange), Order = 0)]
        [XmlElement("customXmlInsRangeEnd", typeof(CT_Markup), Order = 0)]
        [XmlElement("customXmlInsRangeStart", typeof(CT_TrackChange), Order = 0)]
        [XmlElement("customXmlMoveFromRangeEnd", typeof(CT_Markup), Order = 0)]
        [XmlElement("customXmlMoveFromRangeStart", typeof(CT_TrackChange), Order = 0)]
        [XmlElement("customXmlMoveToRangeEnd", typeof(CT_Markup), Order = 0)]
        [XmlElement("customXmlMoveToRangeStart", typeof(CT_TrackChange), Order = 0)]
        [XmlElement("del", typeof(CT_RunTrackChange), Order = 0)]
        [XmlElement("ins", typeof(CT_RunTrackChange), Order = 0)]
        [XmlElement("moveFrom", typeof(CT_RunTrackChange), Order = 0)]
        [XmlElement("moveFromRangeEnd", typeof(CT_MarkupRange), Order = 0)]
        [XmlElement("moveFromRangeStart", typeof(CT_MoveBookmark), Order = 0)]
        [XmlElement("moveTo", typeof(CT_RunTrackChange), Order = 0)]
        [XmlElement("moveToRangeEnd", typeof(CT_MarkupRange), Order = 0)]
        [XmlElement("moveToRangeStart", typeof(CT_MoveBookmark), Order = 0)]
        [XmlElement("p", typeof(CT_P), Order = 0)]
        [XmlElement("permEnd", typeof(CT_Perm), Order = 0)]
        [XmlElement("permStart", typeof(CT_PermStart), Order = 0)]
        [XmlElement("proofErr", typeof(CT_ProofErr), Order = 0)]
        [XmlElement("sdt", typeof(CT_SdtBlock), Order = 0)]
        [XmlElement("tbl", typeof(CT_Tbl), Order = 0)]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlElement("ItemsElementName", Order = 1)]
        [XmlIgnore]
        public ItemsChoiceType[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                this.itemsElementNameField = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_AltChunk
    {

        private CT_AltChunkPr altChunkPrField;

        private string idField;

        public CT_AltChunk()
        {
            this.altChunkPrField = new CT_AltChunkPr();
        }

        [XmlElement(Order = 0)]
        public CT_AltChunkPr altChunkPr
        {
            get
            {
                return this.altChunkPrField;
            }
            set
            {
                this.altChunkPrField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_AltChunkPr
    {

        private CT_OnOff matchSrcField;

        public CT_AltChunkPr()
        {
            this.matchSrcField = new CT_OnOff();
        }

        [XmlElement(Order = 0)]
        public CT_OnOff matchSrc
        {
            get
            {
                return this.matchSrcField;
            }
            set
            {
                this.matchSrcField = value;
            }
        }
    }


    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IncludeInSchema = false)]
    public enum ItemsChoiceType
    {

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMath")]
        oMath,

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMathPara")]
        oMathPara,

    
        altChunk,

    
        bookmarkEnd,

    
        bookmarkStart,

    
        commentRangeEnd,

    
        commentRangeStart,

    
        customXml,

    
        customXmlDelRangeEnd,

    
        customXmlDelRangeStart,

    
        customXmlInsRangeEnd,

    
        customXmlInsRangeStart,

    
        customXmlMoveFromRangeEnd,

    
        customXmlMoveFromRangeStart,

    
        customXmlMoveToRangeEnd,

    
        customXmlMoveToRangeStart,

    
        del,

    
        ins,

    
        moveFrom,

    
        moveFromRangeEnd,

    
        moveFromRangeStart,

    
        moveTo,

    
        moveToRangeEnd,

    
        moveToRangeStart,

    
        p,

    
        permEnd,

    
        permStart,

    
        proofErr,

    
        sdt,

    
        tbl,
    }



    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_DisplacedByCustomXml
    {

    
        next,

    
        prev,
    }


    
    

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_ThemeColor
    {

    
        dark1,

    
        light1,

    
        dark2,

    
        light2,

    
        accent1,

    
        accent2,

    
        accent3,

    
        accent4,

    
        accent5,

    
        accent6,

    
        hyperlink,

    
        followedHyperlink,

    
        none,

    
        background1,

    
        text1,

    
        background2,

    
        text2,
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_EastAsianLayout
    {

        private string idField;

        private ST_OnOff combineField;

        private bool combineFieldSpecified;

        private ST_CombineBrackets combineBracketsField;

        private bool combineBracketsFieldSpecified;

        private ST_OnOff vertField;

        private bool vertFieldSpecified;

        private ST_OnOff vertCompressField;

        private bool vertCompressFieldSpecified;

        public static CT_EastAsianLayout Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_EastAsianLayout ctObj = new CT_EastAsianLayout();
            ctObj.id = XmlHelper.ReadString(node.Attributes["r:id"]);
            if (node.Attributes["w:combine"] != null)
                ctObj.combine = (ST_OnOff)Enum.Parse(typeof(ST_OnOff), node.Attributes["w:combine"].Value);
            if (node.Attributes["w:combineBrackets"] != null)
                ctObj.combineBrackets = (ST_CombineBrackets)Enum.Parse(typeof(ST_CombineBrackets), node.Attributes["w:combineBrackets"].Value);
            if (node.Attributes["w:vert"] != null)
                ctObj.vert = (ST_OnOff)Enum.Parse(typeof(ST_OnOff), node.Attributes["w:vert"].Value);
            if (node.Attributes["w:vertCompress"] != null)
                ctObj.vertCompress = (ST_OnOff)Enum.Parse(typeof(ST_OnOff), node.Attributes["w:vertCompress"].Value);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "r:id", this.id);
            XmlHelper.WriteAttribute(sw, "w:combine", this.combine.ToString());
            XmlHelper.WriteAttribute(sw, "w:combineBrackets", this.combineBrackets.ToString());
            XmlHelper.WriteAttribute(sw, "w:vert", this.vert.ToString());
            XmlHelper.WriteAttribute(sw, "w:vertCompress", this.vertCompress.ToString());
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff combine
        {
            get
            {
                return this.combineField;
            }
            set
            {
                this.combineField = value;
            }
        }

        [XmlIgnore]
        public bool combineSpecified
        {
            get
            {
                return this.combineFieldSpecified;
            }
            set
            {
                this.combineFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_CombineBrackets combineBrackets
        {
            get
            {
                return this.combineBracketsField;
            }
            set
            {
                this.combineBracketsField = value;
            }
        }

        [XmlIgnore]
        public bool combineBracketsSpecified
        {
            get
            {
                return this.combineBracketsFieldSpecified;
            }
            set
            {
                this.combineBracketsFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff vert
        {
            get
            {
                return this.vertField;
            }
            set
            {
                this.vertField = value;
            }
        }

        [XmlIgnore]
        public bool vertSpecified
        {
            get
            {
                return this.vertFieldSpecified;
            }
            set
            {
                this.vertFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff vertCompress
        {
            get
            {
                return this.vertCompressField;
            }
            set
            {
                this.vertCompressField = value;
            }
        }

        [XmlIgnore]
        public bool vertCompressSpecified
        {
            get
            {
                return this.vertCompressFieldSpecified;
            }
            set
            {
                this.vertCompressFieldSpecified = value;
            }
        }
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_CombineBrackets
    {

    
        none,

    
        round,

    
        square,

    
        angle,

    
        curly,
    }

    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_FitText
    {
        public static CT_FitText Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_FitText ctObj = new CT_FitText();
            ctObj.val = XmlHelper.ReadULong(node.Attributes["w:val"]);
            ctObj.id = XmlHelper.ReadString(node.Attributes["w:id"]);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "w:val", this.val);
            XmlHelper.WriteAttribute(sw, "w:id", this.id);
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


        private ulong valField;

        private string idField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }

        // TODO is the following correct/better with regard the namespace?
        //[XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "integer")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    
    

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_HighlightColor
    {

    
        black,

    
        blue,

    
        cyan,

    
        green,

    
        magenta,

    
        red,

    
        yellow,

    
        white,

    
        darkBlue,

    
        darkCyan,

    
        darkGreen,

    
        darkMagenta,

    
        darkRed,

    
        darkYellow,

    
        darkGray,

    
        lightGray,

    
        none,
    }

    
    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Language
    {

        private string valField;

        private string eastAsiaField;

        private string bidiField;

        public static CT_Language Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Language ctObj = new CT_Language();
            ctObj.val = XmlHelper.ReadString(node.Attributes["w:val"]);
            ctObj.eastAsia = XmlHelper.ReadString(node.Attributes["w:eastAsia"]);
            ctObj.bidi = XmlHelper.ReadString(node.Attributes["w:bidi"]);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "w:val", this.val);
            XmlHelper.WriteAttribute(sw, "w:eastAsia", this.eastAsia);
            XmlHelper.WriteAttribute(sw, "w:bidi", this.bidi);
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string eastAsia
        {
            get
            {
                return this.eastAsiaField;
            }
            set
            {
                this.eastAsiaField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string bidi
        {
            get
            {
                return this.bidiField;
            }
            set
            {
                this.bidiField = value;
            }
        }
    }
    

    
    
    

    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Cnf
    {
        public static CT_Cnf Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Cnf ctObj = new CT_Cnf();
            ctObj.val = XmlHelper.ReadString(node.Attributes["w:val"]);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "w:val", this.val);
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


        private string valField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }
    


    [XmlInclude(typeof(CT_FontRel))]
    [XmlInclude(typeof(CT_HdrFtrRef))]
    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Rel
    {

        private string idField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public static CT_Rel Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Rel ctObj = new CT_Rel();
            ctObj.id = XmlHelper.ReadString(node.Attributes["r:id"]);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "r:id", this.id);
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_FontRel : CT_Rel
    {

        private string fontKeyField;

        private ST_OnOff subsettedField;

        private bool subsettedFieldSpecified;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "token")]
        public string fontKey
        {
            get
            {
                return this.fontKeyField;
            }
            set
            {
                this.fontKeyField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff subsetted
        {
            get
            {
                return this.subsettedField;
            }
            set
            {
                this.subsettedField = value;
            }
        }

        [XmlIgnore]
        public bool subsettedSpecified
        {
            get
            {
                return this.subsettedFieldSpecified;
            }
            set
            {
                this.subsettedFieldSpecified = value;
            }
        }
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IncludeInSchema = false)]
    public enum ItemsChoiceHdrFtrRefType
    {

    
        footerReference,

    
        headerReference,
    }


    

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_ChapterSep
    {

    
        hyphen,

    
        period,

    
        colon,

    
        emDash,

    
        enDash,
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Columns
    {

        private List<CT_Column> colField;

        private ST_OnOff equalWidthField;

        private bool equalWidthFieldSpecified;

        private ulong spaceField;

        private bool spaceFieldSpecified;

        private string numField;

        private ST_OnOff sepField;

        private bool sepFieldSpecified;

        public CT_Columns()
        {
            //this.colField = new List<CT_Column>();
        }
        public static CT_Columns Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Columns ctObj = new CT_Columns();
            if (node.Attributes["w:equalWidth"] != null)
                ctObj.equalWidth = (ST_OnOff)Enum.Parse(typeof(ST_OnOff), node.Attributes["w:equalWidth"].Value);
            ctObj.space = XmlHelper.ReadULong(node.Attributes["w:space"]);
            ctObj.num = XmlHelper.ReadString(node.Attributes["w:num"]);
            if (node.Attributes["w:sep"] != null)
                ctObj.sep = (ST_OnOff)Enum.Parse(typeof(ST_OnOff), node.Attributes["w:sep"].Value);
            ctObj.col = new List<CT_Column>();
            foreach (XmlNode childNode in node.ChildNodes)
            {
                if (childNode.LocalName == "col")
                    ctObj.col.Add(CT_Column.Parse(childNode, namespaceManager));
            }
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "w:equalWidth", this.equalWidth.ToString());
            XmlHelper.WriteAttribute(sw, "w:space", this.space);
            XmlHelper.WriteAttribute(sw, "w:num", this.num);
            XmlHelper.WriteAttribute(sw, "w:sep", this.sep.ToString());
            sw.Write(">");
            if (this.col != null)
            {
                foreach (CT_Column x in this.col)
                {
                    x.Write(sw, "col");
                }
            }
            sw.Write(string.Format("</w:{0}>", nodeName));
        }


        [XmlElement("col", Order = 0)]
        public List<CT_Column> col
        {
            get
            {
                return this.colField;
            }
            set
            {
                this.colField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff equalWidth
        {
            get
            {
                return this.equalWidthField;
            }
            set
            {
                this.equalWidthField = value;
            }
        }

        [XmlIgnore]
        public bool equalWidthSpecified
        {
            get
            {
                return this.equalWidthFieldSpecified;
            }
            set
            {
                this.equalWidthFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong space
        {
            get
            {
                return this.spaceField;
            }
            set
            {
                this.spaceField = value;
            }
        }

        [XmlIgnore]
        public bool spaceSpecified
        {
            get
            {
                return this.spaceFieldSpecified;
            }
            set
            {
                this.spaceFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "integer")]
        public string num
        {
            get
            {
                return this.numField;
            }
            set
            {
                this.numField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff sep
        {
            get
            {
                return this.sepField;
            }
            set
            {
                this.sepField = value;
            }
        }

        [XmlIgnore]
        public bool sepSpecified
        {
            get
            {
                return this.sepFieldSpecified;
            }
            set
            {
                this.sepFieldSpecified = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Column
    {

        private ulong wField;

        private bool wFieldSpecified;

        private ulong spaceField;

        private bool spaceFieldSpecified;
        public static CT_Column Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Column ctObj = new CT_Column();
            ctObj.w = XmlHelper.ReadULong(node.Attributes["w:w"]);
            ctObj.space = XmlHelper.ReadULong(node.Attributes["w:space"]);
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<w:{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "w:w", this.w);
            XmlHelper.WriteAttribute(sw, "w:space", this.space);
            sw.Write(">");
            sw.Write(string.Format("</w:{0}>", nodeName));
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong w
        {
            get
            {
                return this.wField;
            }
            set
            {
                this.wField = value;
            }
        }

        [XmlIgnore]
        public bool wSpecified
        {
            get
            {
                return this.wFieldSpecified;
            }
            set
            {
                this.wFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong space
        {
            get
            {
                return this.spaceField;
            }
            set
            {
                this.spaceField = value;
            }
        }

        [XmlIgnore]
        public bool spaceSpecified
        {
            get
            {
                return this.spaceFieldSpecified;
            }
            set
            {
                this.spaceFieldSpecified = value;
            }
        }
    }

 

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_TrackChangeRange : CT_TrackChange
    {

        private ST_DisplacedByCustomXml displacedByCustomXmlField;

        private bool displacedByCustomXmlFieldSpecified;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_DisplacedByCustomXml displacedByCustomXml
        {
            get
            {
                return this.displacedByCustomXmlField;
            }
            set
            {
                this.displacedByCustomXmlField = value;
            }
        }

        [XmlIgnore]
        public bool displacedByCustomXmlSpecified
        {
            get
            {
                return this.displacedByCustomXmlFieldSpecified;
            }
            set
            {
                this.displacedByCustomXmlFieldSpecified = value;
            }
        }
    }

    
    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Divs
    {

        private List<CT_Div> divField;

        public CT_Divs()
        {
            this.divField = new List<CT_Div>();
        }

        [XmlElement("div", Order = 0)]
        public List<CT_Div> div
        {
            get
            {
                return this.divField;
            }
            set
            {
                this.divField = value;
            }
        }
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Div
    {

        private CT_OnOff blockQuoteField;

        private CT_OnOff bodyDivField;

        private CT_SignedTwipsMeasure marLeftField;

        private CT_SignedTwipsMeasure marRightField;

        private CT_SignedTwipsMeasure marTopField;

        private CT_SignedTwipsMeasure marBottomField;

        private CT_DivBdr divBdrField;

        private List<CT_Divs> divsChildField;

        private string idField;

        public CT_Div()
        {
            this.divsChildField = new List<CT_Divs>();
            this.divBdrField = new CT_DivBdr();
            this.marBottomField = new CT_SignedTwipsMeasure();
            this.marTopField = new CT_SignedTwipsMeasure();
            this.marRightField = new CT_SignedTwipsMeasure();
            this.marLeftField = new CT_SignedTwipsMeasure();
            this.bodyDivField = new CT_OnOff();
            this.blockQuoteField = new CT_OnOff();
        }

        [XmlElement(Order = 0)]
        public CT_OnOff blockQuote
        {
            get
            {
                return this.blockQuoteField;
            }
            set
            {
                this.blockQuoteField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_OnOff bodyDiv
        {
            get
            {
                return this.bodyDivField;
            }
            set
            {
                this.bodyDivField = value;
            }
        }

        [XmlElement(Order = 2)]
        public CT_SignedTwipsMeasure marLeft
        {
            get
            {
                return this.marLeftField;
            }
            set
            {
                this.marLeftField = value;
            }
        }

        [XmlElement(Order = 3)]
        public CT_SignedTwipsMeasure marRight
        {
            get
            {
                return this.marRightField;
            }
            set
            {
                this.marRightField = value;
            }
        }

        [XmlElement(Order = 4)]
        public CT_SignedTwipsMeasure marTop
        {
            get
            {
                return this.marTopField;
            }
            set
            {
                this.marTopField = value;
            }
        }

        [XmlElement(Order = 5)]
        public CT_SignedTwipsMeasure marBottom
        {
            get
            {
                return this.marBottomField;
            }
            set
            {
                this.marBottomField = value;
            }
        }

        [XmlElement(Order = 6)]
        public CT_DivBdr divBdr
        {
            get
            {
                return this.divBdrField;
            }
            set
            {
                this.divBdrField = value;
            }
        }

        [XmlElement("divsChild", Order = 7)]
        public List<CT_Divs> divsChild
        {
            get
            {
                return this.divsChildField;
            }
            set
            {
                this.divsChildField = value;
            }
        }

        // TODO is the following correct/better with regard the namespace?
        //[XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "integer")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_DivBdr
    {

        private CT_Border topField;

        private CT_Border leftField;

        private CT_Border bottomField;

        private CT_Border rightField;

        public CT_DivBdr()
        {
            this.rightField = new CT_Border();
            this.bottomField = new CT_Border();
            this.leftField = new CT_Border();
            this.topField = new CT_Border();
        }

        [XmlElement(Order = 0)]
        public CT_Border top
        {
            get
            {
                return this.topField;
            }
            set
            {
                this.topField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_Border left
        {
            get
            {
                return this.leftField;
            }
            set
            {
                this.leftField = value;
            }
        }

        [XmlElement(Order = 2)]
        public CT_Border bottom
        {
            get
            {
                return this.bottomField;
            }
            set
            {
                this.bottomField = value;
            }
        }

        [XmlElement(Order = 3)]
        public CT_Border right
        {
            get
            {
                return this.rightField;
            }
            set
            {
                this.rightField = value;
            }
        }
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_TargetScreenSz
    {

        private ST_TargetScreenSz valField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_TargetScreenSz val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_TargetScreenSz
    {

    
        [XmlEnum("544x376")]
        Item544x376,

    
        [XmlEnum("640x480")]
        Item640x480,

    
        [XmlEnum("720x512")]
        Item720x512,

    
        [XmlEnum("800x600")]
        Item800x600,

    
        [XmlEnum("1024x768")]
        Item1024x768,

    
        [XmlEnum("1152x882")]
        Item1152x882,

    
        [XmlEnum("1152x900")]
        Item1152x900,

    
        [XmlEnum("1280x1024")]
        Item1280x1024,

    
        [XmlEnum("1600x1200")]
        Item1600x1200,

    
        [XmlEnum("1800x1440")]
        Item1800x1440,

    
        [XmlEnum("1920x1200")]
        Item1920x1200,
    }


    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Panose
    {

        private byte[] valField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "hexBinary")]
        public byte[] val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }
    

    
    
    

  
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IncludeInSchema = false)]
    public enum ItemsChoiceType9
    {

    
        [XmlEnum("urn:schemas-microsoft-com:office:office:")]
        office,

    
        [XmlEnum("urn:schemas-microsoft-com:vml:")]
        vml,
    }



    

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    public enum ST_StyleType
    {

    
        paragraph,

    
        character,

    
        table,

    
        numbering,
    }

    
    
    
    

    

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Drawing
    {

        private List<object> itemsField;

        public CT_Drawing()
        {
            this.itemsField = new List<object>();
        }

        [XmlElement("anchor", typeof(CT_Anchor), Namespace = "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing", Order = 0)]
        [XmlElement("inline", typeof(CT_Inline), Namespace = "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing", Order = 0)]
        public object[] Items
        {
            get
            {
                return this.itemsField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                {
                    this.itemsField = new List<object>();
                }
                else
                {
                    this.itemsField = new List<object>(value);
                }
            }
        }

        public CT_Inline AddNewInline()
        {
            CT_Inline inline = new CT_Inline();
            itemsField.Add(inline);
            return inline;
        }

        public List<CT_Anchor> GetAnchorList()
        {
            lock (this)
            {
                List<CT_Anchor> list = new List<CT_Anchor>();
                foreach (object o in itemsField)
                {
                    if (o is CT_Anchor)
                        list.Add(o as CT_Anchor);
                }
                return list;
            }
        }

        public List<CT_Inline> GetInlineList()
        {
            lock (this)
            {
                List<CT_Inline> list = new List<CT_Inline>();
                foreach (object o in itemsField)
                {
                    if (o is CT_Inline)
                        list.Add(o as CT_Inline);
                }
                return list;
            }
        }

        public CT_Inline GetInlineArray(int p)
        {
            lock (this)
            {
                int index = 0;
                CT_Inline ret = null;
                for (int i = 0; i < itemsField.Count; i++)
                {
                    if (itemsField[i] is CT_Inline)
                    {
                        if (index == p)
                        {
                            ret = itemsField[i] as CT_Inline;
                            break;
                        }
                        else
                            index++;
                    }
                }
                return ret;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    public class CT_Hyperlink
    {

        private CT_EmbeddedWAVAudioFile sndField;

        private CT_OfficeArtExtensionList extLstField;

        private string idField;

        private string invalidUrlField;

        private string actionField;

        private string tgtFrameField;

        private string tooltipField;

        private bool historyField;

        private bool highlightClickField;

        private bool endSndField;

        public CT_Hyperlink()
        {
            //this.extLstField = new CT_OfficeArtExtensionList();
            //this.sndField = new CT_EmbeddedWAVAudioFile();
            this.invalidUrlField = "";
            this.actionField = "";
            this.tgtFrameField = "";
            this.tooltipField = "";
            this.historyField = true;
            this.highlightClickField = false;
            this.endSndField = false;
        }

        [XmlElement(Order = 0)]
        public CT_EmbeddedWAVAudioFile snd
        {
            get
            {
                return this.sndField;
            }
            set
            {
                this.sndField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        // TODO is the following correct/better with regard the namespace?
        //[XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string invalidUrl
        {
            get
            {
                return this.invalidUrlField;
            }
            set
            {
                this.invalidUrlField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string tgtFrame
        {
            get
            {
                return this.tgtFrameField;
            }
            set
            {
                this.tgtFrameField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string tooltip
        {
            get
            {
                return this.tooltipField;
            }
            set
            {
                this.tooltipField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool history
        {
            get
            {
                return this.historyField;
            }
            set
            {
                this.historyField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool highlightClick
        {
            get
            {
                return this.highlightClickField;
            }
            set
            {
                this.highlightClickField = value;
            }
        }

        [XmlAttribute]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool endSnd
        {
            get
            {
                return this.endSndField;
            }
            set
            {
                this.endSndField = value;
            }
        }

        public IEnumerable<CT_R> GetRList()
        {
            throw new NotImplementedException();
        }
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_SimpleField
    {

        private CT_Text fldDataField;

        private List<object> itemsField;

        private List<ItemsChoiceType13> itemsElementNameField;

        private string instrField;

        private ST_OnOff fldLockField;

        private bool fldLockFieldSpecified;

        private ST_OnOff dirtyField;

        private bool dirtyFieldSpecified;

        public CT_SimpleField()
        {
            this.itemsElementNameField = new List<ItemsChoiceType13>();
            this.itemsField = new List<object>();
            this.fldDataField = new CT_Text();
        }

        [XmlElement(Order = 0)]
        public CT_Text fldData
        {
            get
            {
                return this.fldDataField;
            }
            set
            {
                this.fldDataField = value;
            }
        }

        [XmlElement("oMath", typeof(CT_OMath), Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/math", Order = 1)]
        [XmlElement("oMathPara", typeof(CT_OMathPara), Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/math", Order = 1)]
        [XmlElement("bookmarkEnd", typeof(CT_MarkupRange), Order = 1)]
        [XmlElement("bookmarkStart", typeof(CT_Bookmark), Order = 1)]
        [XmlElement("commentRangeEnd", typeof(CT_MarkupRange), Order = 1)]
        [XmlElement("commentRangeStart", typeof(CT_MarkupRange), Order = 1)]
        [XmlElement("customXml", typeof(CT_CustomXmlRun), Order = 1)]
        [XmlElement("customXmlDelRangeEnd", typeof(CT_Markup), Order = 1)]
        [XmlElement("customXmlDelRangeStart", typeof(CT_TrackChange), Order = 1)]
        [XmlElement("customXmlInsRangeEnd", typeof(CT_Markup), Order = 1)]
        [XmlElement("customXmlInsRangeStart", typeof(CT_TrackChange), Order = 1)]
        [XmlElement("customXmlMoveFromRangeEnd", typeof(CT_Markup), Order = 1)]
        [XmlElement("customXmlMoveFromRangeStart", typeof(CT_TrackChange), Order = 1)]
        [XmlElement("customXmlMoveToRangeEnd", typeof(CT_Markup), Order = 1)]
        [XmlElement("customXmlMoveToRangeStart", typeof(CT_TrackChange), Order = 1)]
        [XmlElement("del", typeof(CT_RunTrackChange), Order = 1)]
        [XmlElement("fldSimple", typeof(CT_SimpleField), Order = 1)]
        [XmlElement("hyperlink", typeof(CT_Hyperlink1), Order = 1)]
        [XmlElement("ins", typeof(CT_RunTrackChange), Order = 1)]
        [XmlElement("moveFrom", typeof(CT_RunTrackChange), Order = 1)]
        [XmlElement("moveFromRangeEnd", typeof(CT_MarkupRange), Order = 1)]
        [XmlElement("moveFromRangeStart", typeof(CT_MoveBookmark), Order = 1)]
        [XmlElement("moveTo", typeof(CT_RunTrackChange), Order = 1)]
        [XmlElement("moveToRangeEnd", typeof(CT_MarkupRange), Order = 1)]
        [XmlElement("moveToRangeStart", typeof(CT_MoveBookmark), Order = 1)]
        [XmlElement("permEnd", typeof(CT_Perm), Order = 1)]
        [XmlElement("permStart", typeof(CT_PermStart), Order = 1)]
        [XmlElement("proofErr", typeof(CT_ProofErr), Order = 1)]
        [XmlElement("r", typeof(CT_R), Order = 1)]
        [XmlElement("sdt", typeof(CT_SdtRun), Order = 1)]
        [XmlElement("smartTag", typeof(CT_SmartTagRun), Order = 1)]
        [XmlElement("subDoc", typeof(CT_Rel), Order = 1)]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsField = new List<object>();
                else
                    this.itemsField = new List<object>(value);
            }
        }

        [XmlElement("ItemsElementName", Order = 2)]
        [XmlIgnore]
        public ItemsChoiceType13[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField.ToArray();
            }
            set
            {
                if (value == null || value.Length == 0)
                    this.itemsElementNameField = new List<ItemsChoiceType13>();
                else
                    this.itemsElementNameField = new List<ItemsChoiceType13>(value);
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string instr
        {
            get
            {
                return this.instrField;
            }
            set
            {
                this.instrField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff fldLock
        {
            get
            {
                return this.fldLockField;
            }
            set
            {
                this.fldLockField = value;
            }
        }

        [XmlIgnore]
        public bool fldLockSpecified
        {
            get
            {
                return this.fldLockFieldSpecified;
            }
            set
            {
                this.fldLockFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff dirty
        {
            get
            {
                return this.dirtyField;
            }
            set
            {
                this.dirtyField = value;
            }
        }

        [XmlIgnore]
        public bool dirtySpecified
        {
            get
            {
                return this.dirtyFieldSpecified;
            }
            set
            {
                this.dirtyFieldSpecified = value;
            }
        }

        public IEnumerable<CT_R> GetRList()
        {
            return GetObjectList<CT_R>(ItemsChoiceType13.r);
        }

        #region Generic methods for object operation

        private List<T> GetObjectList<T>(ItemsChoiceType13 type) where T : class
        {
            lock (this)
            {
                List<T> list = new List<T>();
                for (int i = 0; i < itemsElementNameField.Count; i++)
                {
                    if (itemsElementNameField[i] == type)
                        list.Add(itemsField[i] as T);
                }
                return list;
            }
        }
        private int SizeOfArray(ItemsChoiceType13 type)
        {
            lock (this)
            {
                int size = 0;
                for (int i = 0; i < itemsElementNameField.Count; i++)
                {
                    if (itemsElementNameField[i] == type)
                        size++;
                }
                return size;
            }
        }
        private T GetObjectArray<T>(int p, ItemsChoiceType13 type) where T : class
        {
            lock (this)
            {
                int pos = GetObjectIndex(type, p);
                if (pos < 0 || pos >= this.itemsField.Count)
                    return null;
                return itemsField[pos] as T;
            }
        }
        private T InsertNewObject<T>(ItemsChoiceType13 type, int p) where T : class, new()
        {
            T t = new T();
            lock (this)
            {
                int pos = GetObjectIndex(type, p);
                this.itemsElementNameField.Insert(pos, type);
                this.itemsField.Insert(pos, t);
            }
            return t;
        }
        private T AddNewObject<T>(ItemsChoiceType13 type) where T : class, new()
        {
            T t = new T();
            lock (this)
            {
                this.itemsElementNameField.Add(type);
                this.itemsField.Add(t);
            }
            return t;
        }
        private void SetObject<T>(ItemsChoiceType13 type, int p, T obj) where T : class
        {
            lock (this)
            {
                int pos = GetObjectIndex(type, p);
                if (pos < 0 || pos >= this.itemsField.Count)
                    return;
                if (this.itemsField[pos] is T)
                    this.itemsField[pos] = obj;
                else
                    throw new Exception(string.Format(@"object types are difference, itemsField[{0}] is {1}, and parameter obj is {2}",
                        pos, this.itemsField[pos].GetType().Name, typeof(T).Name));
            }
        }
        private int GetObjectIndex(ItemsChoiceType13 type, int p)
        {
            int index = -1;
            int pos = 0;
            for (int i = 0; i < itemsElementNameField.Count; i++)
            {
                if (itemsElementNameField[i] == type)
                {
                    if (pos == p)
                    {
                        index = i;
                        break;
                    }
                    else
                        pos++;
                }
            }
            return index;
        }
        private void RemoveObject(ItemsChoiceType13 type, int p)
        {
            lock (this)
            {
                int pos = GetObjectIndex(type, p);
                if (pos < 0 || pos >= this.itemsField.Count)
                    return;
                itemsElementNameField.RemoveAt(pos);
                itemsField.RemoveAt(pos);
            }
        }
        #endregion
    }

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Text
    {

        private string spaceField;

        private string valueField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        public string space
        {
            get
            {
                return this.spaceField;
            }
            set
            {
                this.spaceField = value;
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    
    [Serializable]
    
    [XmlType(TypeName = "CT_Hyperlink", Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot("CT_Hyperlink", Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Hyperlink1
    {


        private string tgtFrameField;

        private string tooltipField;

        private string docLocationField;

        private ST_OnOff historyField;

        private bool historyFieldSpecified;

        private string anchorField;

        private string idField;

        public CT_Hyperlink1()
        {
			this.rField = new List<CT_R>();
        }
		List<CT_PermStart> permStartField;
		public List<CT_PermStart> permStart
		{
			get { return this.permStartField; }
			set { this.permStartField = value; }
		}

		List<CT_Rel> subDocField;
		public List<CT_Rel> subDoc
		{
			get { return this.subDocField; }
			set { this.subDocField = value; }
		}

		List<CT_TrackChange> customXmlDelRangeStartField;
		public List<CT_TrackChange> customXmlDelRangeStart
		{
			get { return this.customXmlDelRangeStartField; }
			set { this.customXmlDelRangeStartField = value; }
		}

		List<CT_TrackChange> customXmlInsRangeStartField;
		public List<CT_TrackChange> customXmlInsRangeStart
		{
			get { return this.customXmlInsRangeStartField; }
			set { this.customXmlInsRangeStartField = value; }
		}

		List<CT_Markup> customXmlMoveFromRangeEndField;
		public List<CT_Markup> customXmlMoveFromRangeEnd
		{
			get { return this.customXmlMoveFromRangeEndField; }
			set { this.customXmlMoveFromRangeEndField = value; }
		}

		List<CT_OMath> oMathField;
		public List<CT_OMath> oMath
		{
			get { return this.oMathField; }
			set { this.oMathField = value; }
		}

		List<CT_OMathPara> oMathParaField;
		public List<CT_OMathPara> oMathPara
		{
			get { return this.oMathParaField; }
			set { this.oMathParaField = value; }
		}

		List<CT_TrackChange> customXmlMoveFromRangeStartField;
		public List<CT_TrackChange> customXmlMoveFromRangeStart
		{
			get { return this.customXmlMoveFromRangeStartField; }
			set { this.customXmlMoveFromRangeStartField = value; }
		}

		List<CT_Markup> customXmlMoveToRangeEndField;
		public List<CT_Markup> customXmlMoveToRangeEnd
		{
			get { return this.customXmlMoveToRangeEndField; }
			set { this.customXmlMoveToRangeEndField = value; }
		}

		List<CT_TrackChange> customXmlMoveToRangeStartField;
		public List<CT_TrackChange> customXmlMoveToRangeStart
		{
			get { return this.customXmlMoveToRangeStartField; }
			set { this.customXmlMoveToRangeStartField = value; }
		}

		List<CT_RunTrackChange> delField;
		public List<CT_RunTrackChange> del
		{
			get { return this.delField; }
			set { this.delField = value; }
		}

		List<CT_MarkupRange> bookmarkEndField;
		public List<CT_MarkupRange> bookmarkEnd
		{
			get { return this.bookmarkEndField; }
			set { this.bookmarkEndField = value; }
		}

		List<CT_SimpleField> fldSimpleField;
		public List<CT_SimpleField> fldSimple
		{
			get { return this.fldSimpleField; }
			set { this.fldSimpleField = value; }
		}

		List<CT_Hyperlink1> hyperlinkField;
		public List<CT_Hyperlink1> hyperlink
		{
			get { return this.hyperlinkField; }
			set { this.hyperlinkField = value; }
		}

		List<CT_Bookmark> bookmarkStartField;
		public List<CT_Bookmark> bookmarkStart
		{
			get { return this.bookmarkStartField; }
			set { this.bookmarkStartField = value; }
		}

		List<CT_RunTrackChange> insField;
		public List<CT_RunTrackChange> ins
		{
			get { return this.insField; }
			set { this.insField = value; }
		}

		List<CT_MarkupRange> commentRangeEndField;
		public List<CT_MarkupRange> commentRangeEnd
		{
			get { return this.commentRangeEndField; }
			set { this.commentRangeEndField = value; }
		}

		List<CT_Markup> customXmlInsRangeEndField;
		public List<CT_Markup> customXmlInsRangeEnd
		{
			get { return this.customXmlInsRangeEndField; }
			set { this.customXmlInsRangeEndField = value; }
		}

		List<CT_RunTrackChange> moveFromField;
		public List<CT_RunTrackChange> moveFrom
		{
			get { return this.moveFromField; }
			set { this.moveFromField = value; }
		}

		List<CT_MarkupRange> moveFromRangeEndField;
		public List<CT_MarkupRange> moveFromRangeEnd
		{
			get { return this.moveFromRangeEndField; }
			set { this.moveFromRangeEndField = value; }
		}

		List<CT_MoveBookmark> moveFromRangeStartField;
		public List<CT_MoveBookmark> moveFromRangeStart
		{
			get { return this.moveFromRangeStartField; }
			set { this.moveFromRangeStartField = value; }
		}

		List<CT_RunTrackChange> moveToField;
		public List<CT_RunTrackChange> moveTo
		{
			get { return this.moveToField; }
			set { this.moveToField = value; }
		}

		List<CT_MarkupRange> moveToRangeEndField;
		public List<CT_MarkupRange> moveToRangeEnd
		{
			get { return this.moveToRangeEndField; }
			set { this.moveToRangeEndField = value; }
		}

		List<CT_MoveBookmark> moveToRangeStartField;
		public List<CT_MoveBookmark> moveToRangeStart
		{
			get { return this.moveToRangeStartField; }
			set { this.moveToRangeStartField = value; }
		}

		List<CT_Perm> permEndField;
		public List<CT_Perm> permEnd
		{
			get { return this.permEndField; }
			set { this.permEndField = value; }
		}

		List<CT_MarkupRange> commentRangeStartField;
		public List<CT_MarkupRange> commentRangeStart
		{
			get { return this.commentRangeStartField; }
			set { this.commentRangeStartField = value; }
		}

		List<CT_CustomXmlRun> customXmlField;
		public List<CT_CustomXmlRun> customXml
		{
			get { return this.customXmlField; }
			set { this.customXmlField = value; }
		}

		List<CT_ProofErr> proofErrField;
		public List<CT_ProofErr> proofErr
		{
			get { return this.proofErrField; }
			set { this.proofErrField = value; }
		}

		List<CT_R> rField;
		public List<CT_R> r
		{
			get { return this.rField; }
			set { this.rField = value; }
		}

		List<CT_Markup> customXmlDelRangeEndField;
		public List<CT_Markup> customXmlDelRangeEnd
		{
			get { return this.customXmlDelRangeEndField; }
			set { this.customXmlDelRangeEndField = value; }
		}

		List<CT_SdtRun> sdtField;
		public List<CT_SdtRun> sdt
		{
			get { return this.sdtField; }
			set { this.sdtField = value; }
		}

		List<CT_SmartTagRun> smartTagField;
		public List<CT_SmartTagRun> smartTag
		{
			get { return this.smartTagField; }
			set { this.smartTagField = value; }
		}



        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string tgtFrame
        {
            get
            {
                return this.tgtFrameField;
            }
            set
            {
                this.tgtFrameField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string tooltip
        {
            get
            {
                return this.tooltipField;
            }
            set
            {
                this.tooltipField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string docLocation
        {
            get
            {
                return this.docLocationField;
            }
            set
            {
                this.docLocationField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_OnOff history
        {
            get
            {
                return this.historyField;
            }
            set
            {
                this.historyField = value;
            }
        }

        [XmlIgnore]
        public bool historySpecified
        {
            get
            {
                return this.historyFieldSpecified;
            }
            set
            {
                this.historyFieldSpecified = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string anchor
        {
            get
            {
                return this.anchorField;
            }
            set
            {
                this.anchorField = value;
            }
        }

        // TODO is the following correct/better with regard the namespace?
        //[XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }


    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IncludeInSchema = false)]
    public enum ItemsChoiceType12
    {

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMath")]
        oMath,

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMathPara")]
        oMathPara,

    
        bookmarkEnd,

    
        bookmarkStart,

    
        commentRangeEnd,

    
        commentRangeStart,

    
        customXml,

    
        customXmlDelRangeEnd,

    
        customXmlDelRangeStart,

    
        customXmlInsRangeEnd,

    
        customXmlInsRangeStart,

    
        customXmlMoveFromRangeEnd,

    
        customXmlMoveFromRangeStart,

    
        customXmlMoveToRangeEnd,

    
        customXmlMoveToRangeStart,

    
        del,

    
        fldSimple,

    
        hyperlink,

    
        ins,

    
        moveFrom,

    
        moveFromRangeEnd,

    
        moveFromRangeStart,

    
        moveTo,

    
        moveToRangeEnd,

    
        moveToRangeStart,

    
        permEnd,

    
        permStart,

    
        proofErr,

    
        r,

    
        sdt,

    
        smartTag,

    
        subDoc,
    }

    
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IncludeInSchema = false)]
    public enum ItemsChoiceType13
    {

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMath")]
        oMath,

    
        [XmlEnum("http://schemas.openxmlformats.org/officeDocument/2006/math:oMathPara")]
        oMathPara,

    
        bookmarkEnd,

    
        bookmarkStart,

    
        commentRangeEnd,

    
        commentRangeStart,

    
        customXml,

    
        customXmlDelRangeEnd,

    
        customXmlDelRangeStart,

    
        customXmlInsRangeEnd,

    
        customXmlInsRangeStart,

    
        customXmlMoveFromRangeEnd,

    
        customXmlMoveFromRangeStart,

    
        customXmlMoveToRangeEnd,

    
        customXmlMoveToRangeStart,

    
        del,

    
        fldSimple,

    
        hyperlink,

    
        ins,

    
        moveFrom,

    
        moveFromRangeEnd,

    
        moveFromRangeStart,

    
        moveTo,

    
        moveToRangeEnd,

    
        moveToRangeStart,

    
        permEnd,

    
        permStart,

    
        proofErr,

    
        r,

    
        sdt,

    
        smartTag,

    
        subDoc,
    }
    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_ProofErr
    {

        private ST_ProofErr typeField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ST_ProofErr type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_Placeholder
    {

        private CT_String docPartField;

        public CT_Placeholder()
        {
            this.docPartField = new CT_String();
        }

        [XmlElement(Order = 0)]
        public CT_String docPart
        {
            get
            {
                return this.docPartField;
            }
            set
            {
                this.docPartField = value;
            }
        }
    }

    

    
    [Serializable]
    
    [XmlType(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/wordprocessingml/2006/main", IsNullable = true)]
    public class CT_DataBinding
    {

        private string prefixMappingsField;

        private string xpathField;

        private string storeItemIDField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string prefixMappings
        {
            get
            {
                return this.prefixMappingsField;
            }
            set
            {
                this.prefixMappingsField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string xpath
        {
            get
            {
                return this.xpathField;
            }
            set
            {
                this.xpathField = value;
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string storeItemID
        {
            get
            {
                return this.storeItemIDField;
            }
            set
            {
                this.storeItemIDField = value;
            }
        }
    }    
}
