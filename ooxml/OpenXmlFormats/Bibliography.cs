// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>schemas</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace NPOI.OpenXmlFormats
{
    using System.Xml.Serialization;
    using System.Collections.Generic;

    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]
    public class CT_Sources
    {

        private List<CT_SourceType> sourceField;

        private string selectedStyleField;

        private string styleNameField;

        private string uRIField;

        public CT_Sources()
        {
            this.sourceField = new List<CT_SourceType>();
        }
        [XmlElement("Source")]
        public List<CT_SourceType> Source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }
        [XmlAttribute]
        public string SelectedStyle
        {
            get
            {
                return this.selectedStyleField;
            }
            set
            {
                this.selectedStyleField = value;
            }
        }
        [XmlAttribute]
        public string StyleName
        {
            get
            {
                return this.styleNameField;
            }
            set
            {
                this.styleNameField = value;
            }
        }
        [XmlAttribute]
        public string URI
        {
            get
            {
                return this.uRIField;
            }
            set
            {
                this.uRIField = value;
            }
        }
    }

    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]
    public class CT_SourceType
    {

        private List<object> itemsField;

        private List<ItemsChoiceType1> itemsElementNameField;

        public CT_SourceType()
        {
            this.itemsElementNameField = new List<ItemsChoiceType1>();
            this.itemsField = new List<object>();
        }
        [XmlElement("AbbreviatedCaseNumber", typeof(string))]
        [XmlElement("AlbumTitle", typeof(string))]
        [XmlElement("Author", typeof(CT_AuthorType))]
        [XmlElement("BookTitle", typeof(string))]
        [XmlElement("BroadcastTitle", typeof(string))]
        [XmlElement("Broadcaster", typeof(string))]
        [XmlElement("CaseNumber", typeof(string))]
        [XmlElement("ChapterNumber", typeof(string))]
        [XmlElement("City", typeof(string))]
        [XmlElement("Comments", typeof(string))]
        [XmlElement("ConferenceName", typeof(string))]
        [XmlElement("CountryRegion", typeof(string))]
        [XmlElement("Court", typeof(string))]
        [XmlElement("Day", typeof(string))]
        [XmlElement("DayAccessed", typeof(string))]
        [XmlElement("Department", typeof(string))]
        [XmlElement("Distributor", typeof(string))]
        [XmlElement("Edition", typeof(string))]
        [XmlElement("Guid", typeof(string))]
        [XmlElement("Institution", typeof(string))]
        [XmlElement("InternetSiteTitle", typeof(string))]
        [XmlElement("Issue", typeof(string))]
        [XmlElement("JournalName", typeof(string))]
        [XmlElement("LCID", typeof(string))]
        [XmlElement("Medium", typeof(string))]
        [XmlElement("Month", typeof(string))]
        [XmlElement("MonthAccessed", typeof(string))]
        [XmlElement("NumberVolumes", typeof(string))]
        [XmlElement("Pages", typeof(string))]
        [XmlElement("PatentNumber", typeof(string))]
        [XmlElement("PeriodicalTitle", typeof(string))]
        [XmlElement("ProductionCompany", typeof(string))]
        [XmlElement("PublicationTitle", typeof(string))]
        [XmlElement("Publisher", typeof(string))]
        [XmlElement("RecordingNumber", typeof(string))]
        [XmlElement("RefOrder", typeof(string))]
        [XmlElement("Reporter", typeof(string))]
        [XmlElement("ShortTitle", typeof(string))]
        [XmlElement("SourceType", typeof(ST_SourceType))]
        [XmlElement("StandardNumber", typeof(string))]
        [XmlElement("StateProvince", typeof(string))]
        [XmlElement("Station", typeof(string))]
        [XmlElement("Tag", typeof(string))]
        [XmlElement("Theater", typeof(string))]
        [XmlElement("ThesisType", typeof(string))]
        [XmlElement("Title", typeof(string))]
        [XmlElement("Type", typeof(string))]
        [XmlElement("URL", typeof(string))]
        [XmlElement("Version", typeof(string))]
        [XmlElement("Volume", typeof(string))]
        [XmlElement("Year", typeof(string))]
        [XmlElement("YearAccessed", typeof(string))]
        [XmlChoiceIdentifierAttribute("ItemsElementName")]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public List<ItemsChoiceType1> ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                this.itemsElementNameField = value;
            }
        }
    }
    /// <remarks/>
    [System.Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IncludeInSchema = false)]
    public enum ItemsChoiceType1
    {

        /// <remarks/>
        AbbreviatedCaseNumber,

        /// <remarks/>
        AlbumTitle,

        /// <remarks/>
        Author,

        /// <remarks/>
        BookTitle,

        /// <remarks/>
        BroadcastTitle,

        /// <remarks/>
        Broadcaster,

        /// <remarks/>
        CaseNumber,

        /// <remarks/>
        ChapterNumber,

        /// <remarks/>
        City,

        /// <remarks/>
        Comments,

        /// <remarks/>
        ConferenceName,

        /// <remarks/>
        CountryRegion,

        /// <remarks/>
        Court,

        /// <remarks/>
        Day,

        /// <remarks/>
        DayAccessed,

        /// <remarks/>
        Department,

        /// <remarks/>
        Distributor,

        /// <remarks/>
        Edition,

        /// <remarks/>
        Guid,

        /// <remarks/>
        Institution,

        /// <remarks/>
        InternetSiteTitle,

        /// <remarks/>
        Issue,

        /// <remarks/>
        JournalName,

        /// <remarks/>
        LCID,

        /// <remarks/>
        Medium,

        /// <remarks/>
        Month,

        /// <remarks/>
        MonthAccessed,

        /// <remarks/>
        NumberVolumes,

        /// <remarks/>
        Pages,

        /// <remarks/>
        PatentNumber,

        /// <remarks/>
        PeriodicalTitle,

        /// <remarks/>
        ProductionCompany,

        /// <remarks/>
        PublicationTitle,

        /// <remarks/>
        Publisher,

        /// <remarks/>
        RecordingNumber,

        /// <remarks/>
        RefOrder,

        /// <remarks/>
        Reporter,

        /// <remarks/>
        ShortTitle,

        /// <remarks/>
        SourceType,

        /// <remarks/>
        StandardNumber,

        /// <remarks/>
        StateProvince,

        /// <remarks/>
        Station,

        /// <remarks/>
        Tag,

        /// <remarks/>
        Theater,

        /// <remarks/>
        ThesisType,

        /// <remarks/>
        Title,

        /// <remarks/>
        Type,

        /// <remarks/>
        URL,

        /// <remarks/>
        Version,

        /// <remarks/>
        Volume,

        /// <remarks/>
        Year,

        /// <remarks/>
        YearAccessed,
    }

    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]

    public class CT_AuthorType
    {

        private List<object> itemsField;

        private List<ItemsChoiceType> itemsElementNameField;

        public CT_AuthorType()
        {
            this.itemsElementNameField = new List<ItemsChoiceType>();
            this.itemsField = new List<object>();
        }
        [XmlElement("Artist", typeof(CT_NameType))]
        [XmlElement("Author", typeof(CT_NameOrCorporateType))]
        [XmlElement("BookAuthor", typeof(CT_NameType))]
        [XmlElement("Compiler", typeof(CT_NameType))]
        [XmlElement("Composer", typeof(CT_NameType))]
        [XmlElement("Conductor", typeof(CT_NameType))]
        [XmlElement("Counsel", typeof(CT_NameType))]
        [XmlElement("Director", typeof(CT_NameType))]
        [XmlElement("Editor", typeof(CT_NameType))]
        [XmlElement("Interviewee", typeof(CT_NameType))]
        [XmlElement("Interviewer", typeof(CT_NameType))]
        [XmlElement("Inventor", typeof(CT_NameType))]
        [XmlElement("Performer", typeof(CT_NameOrCorporateType))]
        [XmlElement("ProducerName", typeof(CT_NameType))]
        [XmlElement("Translator", typeof(CT_NameType))]
        [XmlElement("Writer", typeof(CT_NameType))]
        [XmlChoiceIdentifierAttribute("ItemsElementName")]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlIgnore]
        public List<ItemsChoiceType> ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                this.itemsElementNameField = value;
            }
        }
    }
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]

    public class CT_NameType
    {

        private List<CT_PersonType> nameListField;

        public CT_NameType()
        {
            this.nameListField = new List<CT_PersonType>();
        }

        [XmlArrayAttribute(Order = 0)]
        [XmlArrayItemAttribute("Person", IsNullable = false)]
        public List<CT_PersonType> NameList
        {
            get
            {
                return this.nameListField;
            }
            set
            {
                this.nameListField = value;
            }
        }
    }
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]
    public class CT_PersonType
    {

        private List<string> lastField;

        private List<string> firstField;

        private List<string> middleField;

        public CT_PersonType()
        {
            this.middleField = new List<string>();
            this.firstField = new List<string>();
            this.lastField = new List<string>();
        }
        [XmlElement("Last")]
        public List<string> Last
        {
            get
            {
                return this.lastField;
            }
            set
            {
                this.lastField = value;
            }
        }
        [XmlElement("First")]
        public List<string> First
        {
            get
            {
                return this.firstField;
            }
            set
            {
                this.firstField = value;
            }
        }
        [XmlElement("Middle")]
        public List<string> Middle
        {
            get
            {
                return this.middleField;
            }
            set
            {
                this.middleField = value;
            }
        }
    }
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]
    public class CT_NameOrCorporateType
    {

        private object itemField;
        [XmlElement("Corporate", typeof(string))]
        [XmlElement("NameList", typeof(CT_NameListType))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography", IsNullable = true)]

    public class CT_NameListType
    {

        private List<CT_PersonType> personField;

        public CT_NameListType()
        {
            this.personField = new List<CT_PersonType>();
        }
        [XmlElement("Person")]
        public List<CT_PersonType> Person
        {
            get
            {
                return this.personField;
            }
            set
            {
                this.personField = value;
            }
        }
    }

 
    public enum ST_SourceType
    {

        /// <remarks/>
        ArticleInAPeriodical,

        /// <remarks/>
        Book,

        /// <remarks/>
        BookSection,

        /// <remarks/>
        JournalArticle,

        /// <remarks/>
        ConferenceProceedings,

        /// <remarks/>
        Report,

        /// <remarks/>
        SoundRecording,

        /// <remarks/>
        Performance,

        /// <remarks/>
        Art,

        /// <remarks/>
        DocumentFromInternetSite,

        /// <remarks/>
        InternetSite,

        /// <remarks/>
        Film,

        /// <remarks/>
        Interview,

        /// <remarks/>
        Patent,

        /// <remarks/>
        ElectronicSource,

        /// <remarks/>
        Case,

        /// <remarks/>
        Misc,
    }


}
